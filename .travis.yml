sudo: required

language: node_js

jobs:
  include:
    - stage: test
      env:
      - CXX=g++-4.8
      node_js: '6'
      services:
      - mysql
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - g++-4.8
      before_install:
        - npm install -g grunt-cli
        - mysql -e "create database IF NOT EXISTS gladystest;" -uroot
        - mysql -u root -e "GRANT ALL PRIVILEGES ON gladystest.* TO 'travis'@'%';";
      script:
        - "grunt coverage"
        - "grunt buildProd"
      
    - stage: test
      env:
      - CXX=g++-4.8
      node_js: '8'
      services:
      - mysql
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - g++-4.8
      before_install:
        - npm install -g grunt-cli
        - mysql -e "create database IF NOT EXISTS gladystest;" -uroot
        - mysql -u root -e "GRANT ALL PRIVILEGES ON gladystest.* TO 'travis'@'%';";
      script:
        - "grunt coverage"
        - "grunt buildProd"
      after_success:
        - "grunt documentation"
        - "grunt apidoc"
        - "mkdir documentation"
        - "mv docs jsdoc"
        - "mv ./jsdoc/ ./documentation/"
        - "mv ./apidoc/ ./documentation/"
        - echo "<script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-42837031-1\"></script> <script> window.dataLayer = window.dataLayer || []; function gtag(){dataLayer.push(arguments);} gtag('js', new Date()); gtag('config', 'UA-42837031-1'); </script>" >> ./documentation/jsdoc/index.html
        - echo "<script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-42837031-1\"></script> <script> window.dataLayer = window.dataLayer || []; function gtag(){dataLayer.push(arguments);} gtag('js', new Date()); gtag('config', 'UA-42837031-1'); </script>" >> ./documentation/apidoc/index.html

      
    - stage: test
      env:
      - CXX=g++-4.8
      node_js: '10'
      services:
      - mysql
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - g++-4.8
      before_install:
        - npm install -g grunt-cli
        - mysql -e "create database IF NOT EXISTS gladystest;" -uroot
        - mysql -u root -e "GRANT ALL PRIVILEGES ON gladystest.* TO 'travis'@'%';";
      script:
        - "grunt coverage"
        - "grunt buildProd"
    
    - stage: build docker image
      services:
      - docker
      node_js: '8'
      env:
      - DOCKER_REPO_SLUG=gladysproject/gladys
      script:
      - docker build -t $DOCKER_REPO_SLUG:latest .
      - if [[ $TRAVIS_TAG = $TRAVIS_BRANCH ]]; then docker build -t $DOCKER_REPO_SLUG:$TRAVIS_BRANCH .; else true ; fi
      - if [[ $TRAVIS_TAG = $TRAVIS_BRANCH ]]; then docker build -t $DOCKER_REPO_SLUG:stable .; else true ; fi
      after_success:
      - docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"
      - if [[ $TRAVIS_BRANCH = master ]]; then docker push $DOCKER_REPO_SLUG:latest; else true; fi
      - if [[ $TRAVIS_TAG = $TRAVIS_BRANCH ]]; then docker push $DOCKER_REPO_SLUG:$TRAVIS_TAG; else true ; fi
      - if [[ $TRAVIS_TAG = $TRAVIS_BRANCH ]]; then docker push $DOCKER_REPO_SLUG:stable; else true ; fi
    
    - stage: deploy documentation
      node_js: '8'
      script: echo "Deploying documentation to Github"
      deploy:
        provider: pages
        repo: GladysProject/documentation
        skip_cleanup: true
        github_token: $GITHUB_TOKEN # Set in travis-ci.org dashboard
        local_dir: documentation
        target-branch: gh-pages
        fqdn: documentation.gladysproject.com
        verbose: true
        on:
          branch: master
