const { BroadlinkDeviceSP2, BroadlinkDeviceMP1 } = require('broadlink-js');

const { BadParameters } = require('../../../../../utils/coreErrors');

const { MODULES } = require('./broadlink.device.constants');
const { createDevice } = require('./utils/broadlink.device.createDevice');

/**
 * @description Build peripheral.
 * @param {Object} peripheralInfo - Peripheral information generated by Broadlink library.
 * @returns {Object} Broadlink peripheral.
 * @example
 * deviceHandler.buildPeripheral({
 *  name: 'RM3 Pro Plus',
 *  address: '192.168.1.1',
 *  ...
 * });
 */
function buildPeripheral(peripheralInfo) {
  const { module, name, mac: macBuffer } = peripheralInfo;

  let device;
  let nbSwitches;

  switch (module) {
    case MODULES.SP2: {
      device = new BroadlinkDeviceSP2(peripheralInfo);
      nbSwitches = 1;
      break;
    }
    case MODULES.MP1: {
      device = new BroadlinkDeviceMP1(peripheralInfo);
      nbSwitches = 4;
      break;
    }
    default:
      throw new BadParameters(`Broadlink ${peripheralInfo.module} is not recognized.`);
  }

  const mac = macBuffer.toString('hex');
  const peripheral = {
    device: createDevice(name, module, mac, nbSwitches, this.serviceId),
  };

  return { device, peripheral };
}

module.exports = {
  buildPeripheral,
};
