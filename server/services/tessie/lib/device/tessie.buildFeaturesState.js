const {
  DEVICE_FEATURE_CATEGORIES,
  DEVICE_FEATURE_TYPES,
  DEVICE_FEATURE_UNITS,
} = require('../../../../utils/constants');

/**
 * @description Transforms Tessie feature as Gladys feature.
 * @param {string} externalId - Gladys external ID.
 * @param {string} category - Gladys category.
 * @param {object} vehicleState - State from Tessie.
 * @returns {object} Gladys feature or undefined.
 * @example
 * buildFeatureState('tessie:vehicle_vin', 'ELECTRICAL_VEHICLE_STATE', vehicleState);
 */
function buildFeatureState(externalId, category, vehicleState) {
  return [
    {
      name: 'Front driver door opened',
      external_id: `${externalId}:door_df_opened`,
      selector: `${externalId}-door-df-opened`,
      category: DEVICE_FEATURE_CATEGORIES[category],
      type: DEVICE_FEATURE_TYPES[category].DOOR_OPENED,
      read_only: true,
      has_feedback: false,
      keep_history: true,
      min: 0,
      max: 1,
      last_value: vehicleState.df ? 1 : 0,
    },
    {
      name: 'Front passenger door opened',
      external_id: `${externalId}:door_pf_opened`,
      selector: `${externalId}-door-pf-opened`,
      category: DEVICE_FEATURE_CATEGORIES[category],
      type: DEVICE_FEATURE_TYPES[category].DOOR_OPENED,
      read_only: true,
      has_feedback: false,
      keep_history: true,
      min: 0,
      max: 1,
      last_value: vehicleState.pf ? 1 : 0,  
    },
    {
      name: 'Rear driver door opened',
      external_id: `${externalId}:door_dr_opened`,
      selector: `${externalId}-door-dr-opened`,
      category: DEVICE_FEATURE_CATEGORIES[category],
      type: DEVICE_FEATURE_TYPES[category].DOOR_OPENED,
      read_only: true,
      has_feedback: false,
      keep_history: true,
      min: 0,
      max: 1,
      last_value: vehicleState.dr ? 1 : 0,
    },
    {
      name: 'Rear passenger door opened',
      external_id: `${externalId}:door_pr_opened`,
      selector: `${externalId}-door-pr-opened`,
      category: DEVICE_FEATURE_CATEGORIES[category],
      type: DEVICE_FEATURE_TYPES[category].DOOR_OPENED,
      read_only: true,
      has_feedback: false,
      keep_history: true,
      min: 0,
      max: 1,
      last_value: vehicleState.pr ? 1 : 0,
    },
    {
      name: 'Frunk opened',
      external_id: `${externalId}:door_ft_opened`,
      selector: `${externalId}-door-ft-opened`,
      category: DEVICE_FEATURE_CATEGORIES[category],
      type: DEVICE_FEATURE_TYPES[category].DOOR_OPENED,
      read_only: true,
      has_feedback: false,
      keep_history: true,
      min: 0,
      max: 1,
      last_value: vehicleState.ft ? 1 : 0,
    },
    {
      name: 'Rear trunk opened',
      external_id: `${externalId}:door_rt_opened`,
      selector: `${externalId}-door-rt-opened`,
      category: DEVICE_FEATURE_CATEGORIES[category],
      type: DEVICE_FEATURE_TYPES[category].DOOR_OPENED,
      read_only: true,
      has_feedback: false,
      keep_history: true,
      min: 0,
      max: 1,
      last_value: vehicleState.rt ? 1 : 0,
    },
    {
      name: 'Odometer',
      external_id: `${externalId}:odometer`,
      selector: `${externalId}-odometer`,
      category: DEVICE_FEATURE_CATEGORIES[category],
      type: DEVICE_FEATURE_TYPES[category].ODOMETER,
      unit: DEVICE_FEATURE_UNITS.MILE,
      read_only: true,
      has_feedback: false,
      keep_history: true,
      min: 0,
      max: 999999999,
      last_value: vehicleState.odometer,
    },
    {
      name: 'Front left tire pressure',
      external_id: `${externalId}:tire_pressure_fl`,
      selector: `${externalId}-tire-pressure-fl`,
      category: DEVICE_FEATURE_CATEGORIES[category],
      type: DEVICE_FEATURE_TYPES[category].TIRE_PRESSURE,
      unit: DEVICE_FEATURE_UNITS.BAR,
      read_only: true,
      has_feedback: false,
      keep_history: true,
      min: 0,
      max: 5,
      last_value: vehicleState.tpms_pressure_fl,
    },
    {
      name: 'Front right tire pressure',
      external_id: `${externalId}:tire_pressure_fr`,
      selector: `${externalId}-tire-pressure-fr`,
      category: DEVICE_FEATURE_CATEGORIES[category],
      type: DEVICE_FEATURE_TYPES[category].TIRE_PRESSURE,
      unit: DEVICE_FEATURE_UNITS.BAR,
      read_only: true,
      has_feedback: false,
      keep_history: true,
      min: 0,
      max: 5,
      last_value: vehicleState.tpms_pressure_fr,
    },
    {
      name: 'Rear left tire pressure',
      external_id: `${externalId}:tire_pressure_rl`,
      selector: `${externalId}-tire-pressure-rl`,
      category: DEVICE_FEATURE_CATEGORIES[category],
      type: DEVICE_FEATURE_TYPES[category].TIRE_PRESSURE,
      unit: DEVICE_FEATURE_UNITS.BAR,
      read_only: true,
      has_feedback: false,
      keep_history: true,
      min: 0,
      max: 5,
      last_value: vehicleState.tpms_pressure_rl,
    },
    {
      name: 'Rear right tire pressure',
      external_id: `${externalId}:tire_pressure_rr`,
      selector: `${externalId}-tire-pressure-rr`,
      category: DEVICE_FEATURE_CATEGORIES[category],
      type: DEVICE_FEATURE_TYPES[category].TIRE_PRESSURE,
      unit: DEVICE_FEATURE_UNITS.BAR,
      read_only: true,
      has_feedback: false,
      keep_history: true,
      min: 0,
      max: 5,
      last_value: vehicleState.tpms_pressure_rr,
    },
    {
      name: 'Front driver window opened',
      external_id: `${externalId}:window_fd_opened`,
      selector: `${externalId}-window-fd-opened`,
      category: DEVICE_FEATURE_CATEGORIES[category],
      type: DEVICE_FEATURE_TYPES[category].WINDOW_OPENED,
      read_only: true,
      has_feedback: false,
      keep_history: true,
      min: 0,
      max: 1,
      last_value: vehicleState.fd_window ? 1 : 0,
    },
    {
      name: 'Front passenger window opened',
      external_id: `${externalId}:window_fp_opened`,
      selector: `${externalId}-window-fp-opened`,
      category: DEVICE_FEATURE_CATEGORIES[category],
      type: DEVICE_FEATURE_TYPES[category].WINDOW_OPENED,
      read_only: true,
      has_feedback: false,
      keep_history: true,
      min: 0,
      max: 1,
      last_value: vehicleState.fp_window ? 1 : 0,
    },
    {
      name: 'Rear driver window opened',
      external_id: `${externalId}:window_rd_opened`,
      selector: `${externalId}-window-rd-opened`,
      category: DEVICE_FEATURE_CATEGORIES[category],
      type: DEVICE_FEATURE_TYPES[category].WINDOW_OPENED,
      read_only: true,
      has_feedback: false,
      keep_history: true,
      min: 0,
      max: 1,
      last_value: vehicleState.rd_window ? 1 : 0,
    },
    {
      name: 'Rear passenger window opened',
      external_id: `${externalId}:window_rp_opened`,
      selector: `${externalId}-window-rp-opened`,
      category: DEVICE_FEATURE_CATEGORIES[category],
      type: DEVICE_FEATURE_TYPES[category].WINDOW_OPENED,
      read_only: true,
      has_feedback: false,
      keep_history: true,
      min: 0,
      max: 1,
      last_value: vehicleState.rp_window ? 1 : 0,
    },
  ];
}

module.exports = {
  buildFeatureState,
};
