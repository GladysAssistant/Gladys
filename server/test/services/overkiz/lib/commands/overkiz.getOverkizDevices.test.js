const { expect } = require('chai');

const OverkizHandler = require('../../../../../services/overkiz/lib/index');

const OVERKIZ_SERVICE_ID = 'OVERKIZ_SERVICE_ID';

describe('getOverkizDevices', () => {
  let gladys;
  let overkizHandler;

  before(() => {
    gladys = {};
    overkizHandler = new OverkizHandler(gladys, OVERKIZ_SERVICE_ID);
  });

  it('should return no device', async () => {
    overkizHandler.devices = {};
    overkizHandler.connected = true;
    const devices = await overkizHandler.getOverkizDevices();
    expect(devices).to.deep.equal([]);
  });

  it('should return device PROG', async () => {
    overkizHandler.devices = {
      '50d30409-4949-4122-a674-aaacc0d28cc4': {
        creationTime: 1586773014000,
        lastUpdateTime: 1586773014000,
        label: 'Box',
        deviceURL: 'internal://0814-0291-7832/pod/0',
        shortcut: false,
        controllableName: 'internal:PodMiniComponent',
        definition: {
          commands: [
            {
              commandName: 'getName',
              nparams: 0,
            },
            {
              commandName: 'update',
              nparams: 0,
            },
            {
              commandName: 'setCountryCode',
              nparams: 1,
            },
            {
              commandName: 'activateCalendar',
              nparams: 0,
            },
            {
              commandName: 'deactivateCalendar',
              nparams: 0,
            },
            {
              commandName: 'refreshPodMode',
              nparams: 0,
            },
            {
              commandName: 'refreshUpdateStatus',
              nparams: 0,
            },
            {
              commandName: 'setCalendar',
              nparams: 1,
            },
            {
              commandName: 'setLightingLedPodMode',
              nparams: 1,
            },
            {
              commandName: 'setPodLedOff',
              nparams: 0,
            },
            {
              commandName: 'setPodLedOn',
              nparams: 0,
            },
          ],
          states: [
            {
              type: 'DiscreteState',
              values: ['offline', 'online'],
              qualifiedName: 'core:ConnectivityState',
            },
            {
              type: 'DataState',
              qualifiedName: 'core:CountryCodeState',
            },
            {
              type: 'DataState',
              qualifiedName: 'core:LocalIPv4AddressState',
            },
            {
              type: 'DataState',
              qualifiedName: 'core:NameState',
            },
            {
              type: 'DiscreteState',
              values: ['doublePress', 'longPress', 'simplePress', 'triplePress', 'veryLongPress'],
              qualifiedName: 'internal:LastActionConfigButtonState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'internal:LightingLedPodModeState',
            },
          ],
          dataProperties: [],
          widgetName: 'Pod',
          uiProfiles: ['UpdatableComponent'],
          uiClass: 'Pod',
          qualifiedName: 'internal:PodMiniComponent',
          type: 'ACTUATOR',
        },
        states: [
          {
            name: 'core:NameState',
            type: 3,
            value: 'Box',
          },
          {
            name: 'internal:LightingLedPodModeState',
            type: 2,
            value: 1,
          },
          {
            name: 'core:CountryCodeState',
            type: 3,
            value: 'BE',
          },
          {
            name: 'core:LocalIPv4AddressState',
            type: 3,
            value: 'N/A',
          },
        ],
        available: true,
        enabled: true,
        placeOID: 'ebd3b36a-dd8f-4012-90c3-6ab51607e889',
        widget: 'Pod',
        type: 1,
        oid: '50d30409-4949-4122-a674-aaacc0d28cc4',
        uiClass: 'Pod',
      },
      'fbb6f179-92b4-479a-9c53-41607e3c7a15': {
        creationTime: 1601921868000,
        lastUpdateTime: 1601921868000,
        label: 'Radiateur',
        deviceURL: 'io://0814-0291-7832/11410052#1',
        shortcut: false,
        controllableName: 'io:AtlanticElectricalHeaterWithAdjustableTemperatureSetpointIOComponent',
        definition: {
          commands: [
            {
              commandName: 'advancedRefresh',
              nparams: 1,
            },
            {
              commandName: 'cancelHeatingLevel',
              nparams: 1,
            },
            {
              commandName: 'delayedStopIdentify',
              nparams: 1,
            },
            {
              commandName: 'getName',
              nparams: 0,
            },
            {
              commandName: 'identify',
              nparams: 0,
            },
            {
              commandName: 'noPersonInside',
              nparams: 0,
            },
            {
              commandName: 'off',
              nparams: 0,
            },
            {
              commandName: 'personInside',
              nparams: 0,
            },
            {
              commandName: 'refreshComfortTemperature',
              nparams: 0,
            },
            {
              commandName: 'refreshDateTime',
              nparams: 0,
            },
            {
              commandName: 'refreshDerogatedTargetTemperature',
              nparams: 0,
            },
            {
              commandName: 'refreshEcoTemperature',
              nparams: 0,
            },
            {
              commandName: 'refreshHeatingLevel',
              nparams: 0,
            },
            {
              commandName: 'refreshIdentifier',
              nparams: 0,
            },
            {
              commandName: 'refreshManufacturerName',
              nparams: 0,
            },
            {
              commandName: 'refreshMaximumHeatingTargetTemperature',
              nparams: 0,
            },
            {
              commandName: 'refreshMaximumTargetTemperature',
              nparams: 0,
            },
            {
              commandName: 'refreshOperatingMode',
              nparams: 0,
            },
            {
              commandName: 'refreshTargetTemperature',
              nparams: 0,
            },
            {
              commandName: 'refreshTemperature',
              nparams: 0,
            },
            {
              commandName: 'refreshTimeProgram',
              nparams: 0,
            },
            {
              commandName: 'setComfortTemperature',
              nparams: 1,
            },
            {
              commandName: 'setDateTime',
              nparams: 1,
            },
            {
              commandName: 'setDerogatedTargetTemperature',
              nparams: 1,
            },
            {
              commandName: 'setEcoTemperature',
              nparams: 1,
            },
            {
              commandName: 'setHeatingLevel',
              nparams: 1,
            },
            {
              commandName: 'setHeatingLevelWithTimer',
              nparams: 2,
            },
            {
              commandName: 'setHolidays',
              nparams: 1,
            },
            {
              commandName: 'setHolidaysTargetTemperature',
              nparams: 1,
            },
            {
              commandName: 'setName',
              nparams: 1,
            },
            {
              commandName: 'setOccupancyActivation',
              nparams: 1,
            },
            {
              commandName: 'setOccupancy',
              nparams: 1,
            },
            {
              commandName: 'setOpenWindowDetectionActivation',
              nparams: 1,
            },
            {
              commandName: 'setOperatingMode',
              nparams: 1,
            },
            {
              commandName: 'setPreviousTargetTemperature',
              nparams: 1,
            },
            {
              commandName: 'setSchedulingType',
              nparams: 1,
            },
            {
              commandName: 'setTargetTemperature',
              nparams: 1,
            },
            {
              commandName: 'setTimeProgram',
              nparams: 1,
            },
            {
              commandName: 'startIdentify',
              nparams: 0,
            },
            {
              commandName: 'stopIdentify',
              nparams: 0,
            },
            {
              commandName: 'wink',
              nparams: 1,
            },
            {
              commandName: 'pairOneWayController',
              nparams: 2,
            },
            {
              commandName: 'refreshAutoProgram',
              nparams: 0,
            },
            {
              commandName: 'refreshControllerAddress',
              nparams: 0,
            },
            {
              commandName: 'refreshCumulatedLowering',
              nparams: 0,
            },
            {
              commandName: 'refreshCurrentWorkingRate',
              nparams: 0,
            },
            {
              commandName: 'refreshDeletionCancelation',
              nparams: 0,
            },
            {
              commandName: 'refreshEffectiveTemperatureSetpoint',
              nparams: 0,
            },
            {
              commandName: 'refreshLocalLeadTime',
              nparams: 0,
            },
            {
              commandName: 'refreshModel',
              nparams: 0,
            },
            {
              commandName: 'refreshNativeFunctionalLevel',
              nparams: 0,
            },
            {
              commandName: 'refreshPeakNotice',
              nparams: 0,
            },
            {
              commandName: 'refreshPeakWarning',
              nparams: 0,
            },
            {
              commandName: 'refreshPowerAndTension',
              nparams: 0,
            },
            {
              commandName: 'refreshRoomDeletionThreshold',
              nparams: 0,
            },
            {
              commandName: 'refreshSetpointLoweringTemperatureInProgMode',
              nparams: 0,
            },
            {
              commandName: 'refreshSynchronisationRequest',
              nparams: 0,
            },
            {
              commandName: 'refreshTemperatureProbeCalibrationOffset',
              nparams: 0,
            },
            {
              commandName: 'setCommunicationTest',
              nparams: 1,
            },
            {
              commandName: 'setDeletionCancelation',
              nparams: 1,
            },
            {
              commandName: 'setExpectedPresence',
              nparams: 1,
            },
            {
              commandName: 'setHeatingLevelForTrigger',
              nparams: 1,
            },
            {
              commandName: 'setNativeLevelsList',
              nparams: 1,
            },
            {
              commandName: 'setPeakNotice',
              nparams: 1,
            },
            {
              commandName: 'setPeakWarning',
              nparams: 1,
            },
            {
              commandName: 'setRoomDeletionThreshold',
              nparams: 1,
            },
            {
              commandName: 'setSetpointLoweringTemperatureInProgMode',
              nparams: 1,
            },
            {
              commandName: 'setTemperatureProbeCalibrationOffset',
              nparams: 1,
            },
            {
              commandName: 'setTwinningExit',
              nparams: 1,
            },
            {
              commandName: 'unpairAllOneWayControllers',
              nparams: 0,
            },
            {
              commandName: 'unpairOneWayController',
              nparams: 2,
            },
          ],
          states: [
            {
              type: 'ContinuousState',
              qualifiedName: 'core:ComfortRoomTemperatureState',
            },
            {
              type: 'DataState',
              qualifiedName: 'core:DateTimeState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:DerogatedTargetTemperatureState',
            },
            {
              type: 'DiscreteState',
              values: ['good', 'low', 'normal', 'verylow'],
              qualifiedName: 'core:DiscreteRSSILevelState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:EcoRoomTemperatureState',
            },
            {
              type: 'DiscreteState',
              values: ['off', 'on'],
              qualifiedName: 'core:HolidaysModeState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:HolidaysTargetTemperatureState',
            },
            {
              type: 'DataState',
              qualifiedName: 'core:IdentifierState',
            },
            {
              type: 'DataState',
              qualifiedName: 'core:ManufacturerNameState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:MaximumHeatingTargetTemperatureState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:MaximumTargetTemperatureState',
            },
            {
              type: 'DataState',
              qualifiedName: 'core:NameState',
            },
            {
              type: 'DiscreteState',
              values: ['active', 'inactive'],
              qualifiedName: 'core:OccupancyActivationState',
            },
            {
              type: 'DiscreteState',
              values: ['off', 'on'],
              qualifiedName: 'core:OnOffState',
            },
            {
              type: 'DiscreteState',
              values: ['active', 'inactive'],
              qualifiedName: 'core:OpenWindowDetectionActivationState',
            },
            {
              type: 'DiscreteState',
              values: [
                'antifreeze',
                'auto',
                'away',
                'eco',
                'frostprotection',
                'manual',
                'max',
                'normal',
                'off',
                'on',
                'prog',
                'program',
                'boost',
              ],
              qualifiedName: 'core:OperatingModeState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:PreviousTargetTemperatureState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:PriorityLockTimerState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:RSSILevelState',
            },
            {
              type: 'DiscreteState',
              values: ['increase', 'none', 'standby'],
              qualifiedName: 'core:RegulationModeState',
            },
            {
              type: 'DiscreteState',
              values: ['available', 'unavailable'],
              qualifiedName: 'core:StatusState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:TargetTemperatureState',
            },
            {
              type: 'DataState',
              qualifiedName: 'core:TimeProgramState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:VersionState',
            },
            {
              type: 'DataState',
              qualifiedName: 'io:AutoProgramState',
            },
            {
              type: 'DataState',
              qualifiedName: 'io:ControllerAddressState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'io:CumulatedLoweringState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'io:CurrentWorkingRateState',
            },
            {
              type: 'DiscreteState',
              values: ['deletion cancelation', 'no deletion cancelation'],
              qualifiedName: 'io:DeletionCancelationState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'io:EffectiveTemperatureSetpointState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'io:ExpectedPresenceState',
            },
            {
              type: 'DiscreteState',
              values: ['external', 'internal'],
              qualifiedName: 'io:InternalExternalSchedulingTypeState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'io:LocalLeadTimeState',
            },
            {
              type: 'DiscreteState',
              values: ['boost', 'comfort', 'comfort-1', 'comfort-2', 'eco', 'frostprotection', 'off', 'secured'],
              qualifiedName: 'io:MaximumHeatingLevelState',
            },
            {
              type: 'DataState',
              qualifiedName: 'io:ModelState',
            },
            {
              type: 'DiscreteState',
              values: ['base', 'medium', 'top'],
              qualifiedName: 'io:NativeFunctionalLevelState',
            },
            {
              type: 'DiscreteState',
              values: ['long peak', 'no peak', 'short peak'],
              qualifiedName: 'io:PeakNoticeState',
            },
            {
              type: 'DiscreteState',
              values: ['long peak warning', 'no warning', 'short peak warning'],
              qualifiedName: 'io:PeakWarningState',
            },
            {
              type: 'DataState',
              qualifiedName: 'io:PowerState',
            },
            {
              type: 'DiscreteState',
              values: [
                'comfortLevel1',
                'comfortLevel2',
                'comfortLevel3',
                'comfortLevel4',
                'environmentProtection',
                'humanProtection',
                'userLevel1',
                'userLevel2',
              ],
              qualifiedName: 'io:PriorityLockLevelState',
            },
            {
              type: 'DiscreteState',
              values: [
                'LSC',
                'SAAC',
                'SFC',
                'UPS',
                'externalGateway',
                'localUser',
                'myself',
                'rain',
                'security',
                'temperature',
                'timer',
                'user',
                'wind',
              ],
              qualifiedName: 'io:PriorityLockOriginatorState',
            },
            {
              type: 'DataState',
              qualifiedName: 'io:RoomDeletionThresholdState',
            },
            {
              type: 'DiscreteState',
              values: ['kept', 'lost'],
              qualifiedName: 'io:RunningState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'io:SetpointLoweringTemperatureInProgModeState',
            },
            {
              type: 'DiscreteState',
              values: ['boost', 'comfort', 'comfort-1', 'comfort-2', 'eco', 'frostprotection', 'off', 'secured'],
              qualifiedName: 'io:TargetHeatingLevelState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'io:TemperatureProbeCalibrationOffsetState',
            },
            {
              type: 'DataState',
              qualifiedName: 'io:TensionState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'io:TimerForTransitoryStateState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'io:UptimeState',
            },
          ],
          dataProperties: [
            {
              value: '500',
              qualifiedName: 'core:identifyInterval',
            },
          ],
          widgetName: 'AtlanticElectricalHeaterWithAdjustableTemperatureSetpoint',
          uiProfiles: ['StatefulOperatingModeHeating', 'OperatingModeHeating', 'StatefulThermostat', 'Thermostat'],
          uiClass: 'HeatingSystem',
          uiClassifiers: ['emitter'],
          qualifiedName: 'io:AtlanticElectricalHeaterWithAdjustableTemperatureSetpointIOComponent',
          type: 'ACTUATOR',
        },
        states: [
          {
            name: 'core:NameState',
            type: 3,
            value: 'Radiateur',
          },
          {
            name: 'core:VersionState',
            type: 3,
            value: '49373431303038202020',
          },
          {
            name: 'core:PriorityLockTimerState',
            type: 1,
            value: 0,
          },
          {
            name: 'core:OnOffState',
            type: 3,
            value: 'on',
          },
          {
            name: 'io:TargetHeatingLevelState',
            type: 3,
            value: 'eco',
          },
          {
            name: 'core:StatusState',
            type: 3,
            value: 'available',
          },
          {
            name: 'core:DiscreteRSSILevelState',
            type: 3,
            value: 'normal',
          },
          {
            name: 'core:RSSILevelState',
            type: 2,
            value: 56,
          },
          {
            name: 'core:IdentifierState',
            type: 3,
            value: '00000000',
          },
          {
            name: 'io:MaximumHeatingLevelState',
            type: 3,
            value: 'unknown',
          },
          {
            name: 'io:TimerForTransitoryStateState',
            type: 1,
            value: 0,
          },
          {
            name: 'core:ComfortRoomTemperatureState',
            type: 1,
            value: 18,
          },
          {
            name: 'core:EcoRoomTemperatureState',
            type: 1,
            value: 7,
          },
          {
            name: 'core:OperatingModeState',
            type: 3,
            value: 'internal',
          },
          {
            name: 'core:OccupancyActivationState',
            type: 3,
            value: 'inactive',
          },
          {
            name: 'core:MaximumHeatingTargetTemperatureState',
            type: 2,
            value: 28,
          },
          {
            name: 'core:MaximumTargetTemperatureState',
            type: 2,
            value: 28,
          },
          {
            name: 'core:TargetTemperatureState',
            type: 2,
            value: 18,
          },
          {
            name: 'io:SetpointLoweringTemperatureInProgModeState',
            type: 2,
            value: 7,
          },
          {
            name: 'core:OpenWindowDetectionActivationState',
            type: 3,
            value: 'active',
          },
          {
            name: 'io:InternalExternalSchedulingTypeState',
            type: 3,
            value: 'internal',
          },
          {
            name: 'core:DateTimeState',
            type: 11,
            value: {
              month: 3,
              hour: 9,
              year: 2018,
              weekday: 5,
              day: 10,
              minute: 40,
              second: 50,
            },
          },
          {
            name: 'io:LocalLeadTimeState',
            type: 1,
            value: 2269,
          },
          {
            name: 'core:RegulationModeState',
            type: 3,
            value: 'none',
          },
          {
            name: 'core:ManufacturerNameState',
            type: 3,
            value: 'Atlantic',
          },
          {
            name: 'io:ModelState',
            type: 3,
            value: 'AGILIA H PI-io',
          },
          {
            name: 'io:PowerState',
            type: 1,
            value: 750,
          },
          {
            name: 'io:TensionState',
            type: 1,
            value: 230,
          },
          {
            name: 'core:DerogatedTargetTemperatureState',
            type: 2,
            value: 0,
          },
          {
            name: 'io:NativeFunctionalLevelState',
            type: 3,
            value: 'Top',
          },
          {
            name: 'io:TemperatureProbeCalibrationOffsetState',
            type: 2,
            value: 0,
          },
          {
            name: 'io:CurrentWorkingRateState',
            type: 2,
            value: 0,
          },
          {
            name: 'io:CumulatedLoweringState',
            type: 2,
            value: 0,
          },
          {
            name: 'io:RoomDeletionThresholdState',
            type: 3,
            value: '-2°C',
          },
          {
            name: 'io:EffectiveTemperatureSetpointState',
            type: 2,
            value: 11,
          },
          {
            name: 'io:ControllerAddressState',
            type: 1,
            value: 11410051,
          },
          {
            name: 'io:ExpectedPresenceState',
            type: 3,
            value: '17:30',
            lastUpdateTime: 1607184038000,
          },
          {
            name: 'io:AutoProgramState',
            type: 11,
            value: {
              sunday: [
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_NIV3',
                'CONF_NIV3',
                'CONF_3_NIV1',
                'CONF_1',
                'CONF_3_NIV2',
                'CONF_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV2',
                'CONF_NIV3',
                'CONF_2',
                'CONF_1',
                'CONF_2',
                'CONF_NIV1',
                'CONF_NIV2',
                'CONF_2',
                'CONF_NIV2',
                'CONF_NIV1',
                'CONF_2',
                'CONF_NIV2',
                'CONF_3_NIV2',
                'CONF_3_NIV2',
                'CONF_1',
                'CONF_3_NIV1',
                'CONF_1',
                'CONF_1',
                'CONF_1',
                'CONF_NIV2',
                'CONF_NIV2',
                'CONF_NIV3',
                'CONF_NIV2',
                'CONF_3_NIV2',
                'CONF_NIV1',
                'CONF_2',
                'CONF_NIV3',
                'CONF_NIV2',
                'CONF_NIV2',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_1',
                'CONF_2',
                'CONF_1',
                'CONF_1',
                'CONF_3_NIV2',
              ],
              saturday: [
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV2',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_2',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_2',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_2',
                'CONF_2',
                'CONF_3_NIV2',
                'CONF_NIV3',
                'CONF_NIV3',
                'CONF_NIV3',
                'CONF_NIV2',
                'CONF_NIV1',
                'CONF_NIV2',
                'CONF_NIV2',
                'CONF_NIV3',
                'CONF_NIV1',
                'CONF_3_NIV1',
                'CONF_NIV3',
                'CONF_1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_NIV3',
                'CONF_NIV3',
                'CONF_NIV1',
                'CONF_NIV2',
                'CONF_2',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_NIV1',
                'CONF_NIV1',
                'CONF_NIV3',
                'CONF_3_NIV2',
                'CONF_3_NIV1',
                'CONF_3_NIV2',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_NIV1',
                'CONF_3_NIV1',
              ],
              tuesday: [
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_2',
                'CONF_2',
                'CONF_2',
                'CONF_2',
                'CONF_3_NIV2',
                'CONF_NIV1',
                'CONF_NIV3',
                'CONF_3_NIV1',
                'CONF_NIV1',
                'CONF_3_NIV2',
                'CONF_NIV2',
                'CONF_NIV2',
                'CONF_NIV2',
                'CONF_3_NIV1',
                'CONF_3_NIV2',
                'CONF_1',
                'CONF_1',
                'CONF_1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_2',
                'CONF_2',
                'CONF_1',
                'CONF_3_NIV1',
                'CONF_1',
                'CONF_2',
                'CONF_3_NIV2',
                'CONF_3_NIV1',
                'CONF_NIV1',
                'CONF_NIV1',
                'CONF_NIV3',
                'CONF_1',
                'CONF_2',
                'CONF_2',
                'CONF_NIV1',
                'CONF_NIV2',
                'CONF_1',
                'CONF_NIV1',
                'CONF_2',
                'CONF_NIV2',
                'CONF_3_NIV1',
              ],
              wednesday: [
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_2',
                'CONF_NIV1',
                'CONF_3_NIV1',
                'CONF_NIV3',
                'CONF_NIV1',
                'CONF_NIV2',
                'CONF_3_NIV1',
                'CONF_NIV2',
                'CONF_3_NIV1',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV2',
                'CONF_2',
                'CONF_1',
                'CONF_3_NIV2',
                'CONF_2',
                'CONF_NIV3',
                'CONF_3_NIV2',
                'CONF_3_NIV1',
                'CONF_NIV3',
                'CONF_NIV1',
                'CONF_NIV1',
                'CONF_NIV2',
                'CONF_2',
                'CONF_3_NIV2',
                'CONF_NIV3',
                'CONF_NIV2',
                'CONF_2',
                'CONF_1',
                'CONF_1',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_NIV2',
                'CONF_3_NIV1',
                'CONF_1',
                'CONF_3_NIV2',
              ],
              thursday: [
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_2',
                'CONF_2',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_1',
                'CONF_NIV2',
                'CONF_3_NIV1',
                'CONF_1',
                'CONF_2',
                'CONF_NIV1',
                'CONF_1',
                'CONF_3_NIV1',
                'CONF_NIV2',
                'CONF_NIV1',
                'CONF_NIV2',
                'CONF_NIV3',
                'CONF_3_NIV1',
                'CONF_2',
                'CONF_2',
                'CONF_1',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_NIV1',
                'CONF_NIV1',
                'CONF_3_NIV1',
                'CONF_1',
                'CONF_NIV3',
                'CONF_3_NIV2',
                'CONF_3_NIV2',
                'CONF_NIV1',
                'CONF_NIV1',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_NIV1',
                'CONF_1',
                'CONF_3_NIV1',
              ],
              friday: [
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV2',
                'CONF_3_NIV1',
                'CONF_NIV2',
                'CONF_3_NIV1',
                'CONF_NIV3',
                'CONF_2',
                'CONF_NIV3',
                'CONF_3_NIV1',
                'CONF_NIV1',
                'CONF_3_NIV1',
                'CONF_2',
                'CONF_2',
                'CONF_NIV1',
                'CONF_2',
                'CONF_NIV3',
                'CONF_3_NIV2',
                'CONF_2',
                'CONF_NIV1',
                'CONF_NIV2',
                'CONF_NIV3',
                'CONF_NIV3',
                'CONF_2',
                'CONF_NIV2',
                'CONF_1',
                'CONF_NIV1',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_NIV3',
                'CONF_3_NIV1',
                'CONF_NIV1',
                'CONF_3_NIV2',
              ],
              anticipTime: 2269,
              anticipNb: 20,
              monday: [
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_NIV1',
                'CONF_1',
                'CONF_2',
                'CONF_NIV3',
                'CONF_NIV2',
                'CONF_NIV2',
                'CONF_NIV3',
                'CONF_NIV2',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_NIV3',
                'CONF_NIV3',
                'CONF_3_NIV2',
                'CONF_1',
                'CONF_3_NIV1',
                'CONF_1',
                'CONF_3_NIV1',
                'CONF_1',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_3_NIV2',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_NIV3',
                'CONF_NIV2',
                'CONF_NIV3',
                'CONF_3_NIV2',
                'CONF_2',
                'CONF_NIV3',
                'CONF_NIV2',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_3_NIV2',
                'CONF_NIV2',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
              ],
            },
          },
          {
            name: 'core:TimeProgramState',
            type: 10,
            value: [
              {
                monday: [
                  {
                    start: '05:30',
                    end: '08:30',
                  },
                  {
                    start: '18:30',
                    end: '21:00',
                  },
                  {
                    start: '00:00',
                    end: '00:00',
                  },
                ],
              },
              {
                tuesday: [
                  {
                    start: '05:30',
                    end: '08:30',
                  },
                  {
                    start: '18:30',
                    end: '21:00',
                  },
                  {
                    start: '00:00',
                    end: '00:00',
                  },
                ],
              },
              {
                wednesday: [
                  {
                    start: '06:30',
                    end: '08:30',
                  },
                  {
                    start: '18:30',
                    end: '21:00',
                  },
                  {
                    start: '00:00',
                    end: '00:00',
                  },
                ],
              },
              {
                thursday: [
                  {
                    start: '05:30',
                    end: '08:30',
                  },
                  {
                    start: '18:30',
                    end: '21:00',
                  },
                  {
                    start: '00:00',
                    end: '00:00',
                  },
                ],
              },
              {
                friday: [
                  {
                    start: '05:30',
                    end: '08:30',
                  },
                  {
                    start: '18:30',
                    end: '21:00',
                  },
                  {
                    start: '00:00',
                    end: '00:00',
                  },
                ],
              },
              {
                saturday: [
                  {
                    start: '05:30',
                    end: '08:30',
                  },
                  {
                    start: '18:30',
                    end: '21:00',
                  },
                  {
                    start: '00:00',
                    end: '00:00',
                  },
                ],
              },
              {
                sunday: [
                  {
                    start: '05:30',
                    end: '08:30',
                  },
                  {
                    start: '18:30',
                    end: '21:00',
                  },
                  {
                    start: '00:00',
                    end: '00:00',
                  },
                ],
              },
            ],
          },
        ],
        attributes: [
          {
            name: 'core:FirmwareRevision',
            type: 3,
            value: 'I741008',
          },
          {
            name: 'core:Manufacturer',
            type: 3,
            value: 'Atlantic Group',
          },
        ],
        available: true,
        enabled: true,
        placeOID: '9abb0634-9b62-476f-8a60-0a63463e011b',
        place: 'Salle de bain',
        widget: 'AtlanticElectricalHeaterWithAdjustableTemperatureSetpoint',
        type: 1,
        oid: 'fbb6f179-92b4-479a-9c53-41607e3c7a15',
        uiClass: 'HeatingSystem',
      },
      '45eca6ef-5a88-4858-a84c-f9614258f966': {
        creationTime: 1601921868000,
        lastUpdateTime: 1601921868000,
        label: 'IO (11410052#2)',
        deviceURL: 'io://0814-0291-7832/11410052#2',
        shortcut: false,
        controllableName: 'io:TemperatureInCelciusIOSystemDeviceSensor',
        definition: {
          commands: [],
          states: [
            {
              type: 'DiscreteState',
              values: ['available', 'unavailable'],
              qualifiedName: 'core:StatusState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:TemperatureState',
            },
          ],
          dataProperties: [],
          widgetName: 'TemperatureSensor',
          uiProfiles: ['Temperature'],
          uiClass: 'TemperatureSensor',
          qualifiedName: 'io:TemperatureInCelciusIOSystemDeviceSensor',
          type: 'SENSOR',
        },
        states: [
          {
            name: 'core:StatusState',
            type: 3,
            value: 'available',
          },
          {
            name: 'core:TemperatureState',
            type: 2,
            value: 16.83,
          },
        ],
        attributes: [
          {
            name: 'core:FirmwareRevision',
            type: 3,
            value: 'I741008',
          },
          {
            name: 'core:Manufacturer',
            type: 3,
            value: 'Atlantic Group',
          },
          {
            name: 'core:MeasuredValueType',
            type: 3,
            value: 'core:TemperatureInCelcius',
          },
          {
            name: 'core:PowerSourceType',
            type: 3,
            value: 'mainSupply',
          },
        ],
        available: true,
        enabled: true,
        placeOID: '9abb0634-9b62-476f-8a60-0a63463e011b',
        place: 'Salle de bain',
        widget: 'TemperatureSensor',
        type: 2,
        oid: '45eca6ef-5a88-4858-a84c-f9614258f966',
        uiClass: 'TemperatureSensor',
      },
      '2263edf8-95b5-41e8-8c59-a44c89aabe6f': {
        creationTime: 1601921868000,
        lastUpdateTime: 1601921868000,
        label: 'IO (11410052#4)',
        deviceURL: 'io://0814-0291-7832/11410052#4',
        shortcut: false,
        controllableName: 'io:OccupancyIOSystemDeviceSensor',
        definition: {
          commands: [],
          states: [
            {
              eventBased: true,
              type: 'DiscreteState',
              values: ['noPersonInside', 'personInside'],
              qualifiedName: 'core:OccupancyState',
            },
            {
              type: 'DiscreteState',
              values: ['available', 'unavailable'],
              qualifiedName: 'core:StatusState',
            },
          ],
          dataProperties: [],
          widgetName: 'OccupancySensor',
          uiProfiles: ['OccupancyDetector'],
          uiClass: 'OccupancySensor',
          qualifiedName: 'io:OccupancyIOSystemDeviceSensor',
          type: 'SENSOR',
        },
        states: [
          {
            name: 'core:StatusState',
            type: 3,
            value: 'available',
          },
          {
            name: 'core:OccupancyState',
            type: 3,
            value: 'noPersonInside',
          },
        ],
        attributes: [
          {
            name: 'core:FirmwareRevision',
            type: 3,
            value: 'I741008',
          },
          {
            name: 'core:Manufacturer',
            type: 3,
            value: 'Atlantic Group',
          },
          {
            name: 'core:PowerSourceType',
            type: 3,
            value: 'mainSupply',
          },
        ],
        available: true,
        enabled: true,
        placeOID: '9abb0634-9b62-476f-8a60-0a63463e011b',
        place: 'Salle de bain',
        widget: 'OccupancySensor',
        type: 2,
        oid: '2263edf8-95b5-41e8-8c59-a44c89aabe6f',
        uiClass: 'OccupancySensor',
      },
      '3d8317f1-5cfa-475d-9766-582909112fe0': {
        creationTime: 1601921868000,
        lastUpdateTime: 1601921868000,
        label: 'IO (11410052#5)',
        deviceURL: 'io://0814-0291-7832/11410052#5',
        shortcut: false,
        controllableName: 'io:CumulatedElectricalEnergyConsumptionIOSystemDeviceSensor',
        definition: {
          commands: [],
          states: [
            {
              type: 'ContinuousState',
              qualifiedName: 'core:ConsumptionTariff0State',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:ConsumptionTariff1State',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:ConsumptionTariff2State',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:ConsumptionTariff3State',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:ConsumptionTariff4State',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:ConsumptionTariff5State',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:ConsumptionTariff6State',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:ConsumptionTariff7State',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:ConsumptionTariff8State',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:ConsumptionTariff9State',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:ElectricEnergyConsumptionState',
            },
            {
              type: 'DiscreteState',
              values: ['available', 'unavailable'],
              qualifiedName: 'core:StatusState',
            },
          ],
          dataProperties: [],
          widgetName: 'CumulativeElectricPowerConsumptionSensor',
          uiProfiles: ['ElectricEnergyConsumption'],
          uiClass: 'ElectricitySensor',
          qualifiedName: 'io:CumulatedElectricalEnergyConsumptionIOSystemDeviceSensor',
          type: 'SENSOR',
        },
        states: [
          {
            name: 'core:StatusState',
            type: 3,
            value: 'available',
          },
          {
            name: 'core:ElectricEnergyConsumptionState',
            type: 1,
            value: 312000,
          },
          {
            name: 'core:ConsumptionTariff1State',
            type: 1,
            value: 40000,
          },
          {
            name: 'core:ConsumptionTariff2State',
            type: 1,
            value: 100000,
          },
        ],
        attributes: [
          {
            name: 'core:FirmwareRevision',
            type: 3,
            value: 'I741008',
          },
          {
            name: 'core:Manufacturer',
            type: 3,
            value: 'Atlantic Group',
          },
          {
            name: 'core:PowerSourceType',
            type: 3,
            value: 'mainSupply',
          },
          {
            name: 'core:MeasuredValueType',
            type: 3,
            value: 'core:ElectricalEnergyInWh',
          },
        ],
        available: true,
        enabled: true,
        placeOID: '9abb0634-9b62-476f-8a60-0a63463e011b',
        place: 'Salle de bain',
        widget: 'CumulativeElectricPowerConsumptionSensor',
        type: 2,
        oid: '3d8317f1-5cfa-475d-9766-582909112fe0',
        uiClass: 'ElectricitySensor',
      },
      'c40edcea-4d8c-4223-af1c-696abd4e94ff': {
        creationTime: 1601391514000,
        lastUpdateTime: 1601391514000,
        label: 'IO (15909334)',
        deviceURL: 'io://0814-0291-7832/15909334',
        shortcut: false,
        controllableName: 'io:StackComponent',
        definition: {
          commands: [
            {
              commandName: 'advancedSomfyDiscover',
              nparams: 1,
            },
            {
              commandName: 'discover1WayController',
              nparams: 2,
            },
            {
              commandName: 'discoverActuators',
              nparams: 1,
            },
            {
              commandName: 'discoverSensors',
              nparams: 1,
            },
            {
              commandName: 'discoverSomfyUnsetActuators',
              nparams: 0,
            },
            {
              commandName: 'joinNetwork',
              nparams: 0,
            },
            {
              commandName: 'resetNetworkSecurity',
              nparams: 0,
            },
            {
              commandName: 'shareNetwork',
              nparams: 0,
            },
          ],
          states: [],
          dataProperties: [],
          widgetName: 'IOStack',
          uiProfiles: ['Specific'],
          uiClass: 'ProtocolGateway',
          qualifiedName: 'io:StackComponent',
          type: 'PROTOCOL_GATEWAY',
        },
        available: true,
        enabled: true,
        placeOID: 'ebd3b36a-dd8f-4012-90c3-6ab51607e889',
        widget: 'IOStack',
        type: 5,
        oid: 'c40edcea-4d8c-4223-af1c-696abd4e94ff',
        uiClass: 'ProtocolGateway',
      },
    };
    overkizHandler.connected = true;
    const devices = await overkizHandler.getOverkizDevices();
    expect(devices).to.deep.equal([
      {
        external_id: 'overkiz:deviceURL:io://0814-0291-7832/11410052#1',
        name: 'Radiateur (Salle de bain)',
        model: 'AGILIA H PI-io 750W (Atlantic)',
        service_id: 'OVERKIZ_SERVICE_ID',
        should_poll: true,
        poll_frequency: 1800000,
        updatable: true,
        ready: true,
        rawOverkizDevice: {
          id: 'fbb6f179-92b4-479a-9c53-41607e3c7a15',
          deviceURL: 'io://0814-0291-7832/11410052#1',
        },
        features: [
          {
            category: 'thermostat',
            external_id: 'overkiz:deviceURL:io://0814-0291-7832/11410052#1:state:io:TargetHeatingLevelState',
            has_feedback: true,
            max: 5,
            min: 0,
            name: 'Mode',
            read_only: false,
            selector: 'overkiz-deviceurl-io-0814-0291-7832-114100521-state-io-targetheatinglevelstate',
            type: 'mode',
          },
          {
            category: 'thermostat',
            external_id: 'overkiz:deviceURL:io://0814-0291-7832/11410052#1:state:core:ComfortRoomTemperatureState',
            has_feedback: true,
            max: 40,
            min: 0,
            name: 'Comfort mode temperature',
            read_only: false,
            selector: 'overkiz-deviceurl-io-0814-0291-7832-114100521-state-core-comfortroomtemperaturestate',
            type: 'target-temperature',
            unit: 'celsius',
          },
          {
            category: 'thermostat',
            external_id: 'overkiz:deviceURL:io://0814-0291-7832/11410052#1:state:io:EffectiveTemperatureSetpointState',
            has_feedback: true,
            max: 40,
            min: 0,
            name: 'Eco mode temperature',
            read_only: false,
            selector: 'overkiz-deviceurl-io-0814-0291-7832-114100521-state-io-effectivetemperaturesetpointstate',
            type: 'target-temperature',
            unit: 'celsius',
          },
          {
            name: 'Temperature',
            selector: 'overkiz-deviceurl-io-0814-0291-7832-114100522-state-core-temperaturestate',
            category: 'temperature-sensor',
            type: 'decimal',
            external_id: 'overkiz:deviceURL:io://0814-0291-7832/11410052#2:state:core:TemperatureState',
            read_only: true,
            unit: 'celsius',
            has_feedback: true,
            min: 0,
            max: 40,
          },
          {
            name: 'Occupancy',
            selector: 'overkiz-deviceurl-io-0814-0291-7832-114100524-state-core-occupancystate',
            category: 'presence-sensor',
            type: 'push',
            external_id: 'overkiz:deviceURL:io://0814-0291-7832/11410052#4:state:core:OccupancyState',
            read_only: true,
            has_feedback: false,
            keep_history: true,
            min: 0,
            max: 1,
          },
        ],
        params: [
          {
            name: 'ONLINE',
            value: 'available',
          },
          {
            name: 'FIRMWARE',
            value: 'I741008',
          },
          {
            name: 'STATE',
            value: 'internal',
          },
        ],
      },
    ]);
  });

  it('should return device BASIC', async () => {
    overkizHandler.devices = {
      '50d30409-4949-4122-a674-aaacc0d28cc4': {
        creationTime: 1586773014000,
        lastUpdateTime: 1586773014000,
        label: 'Box',
        deviceURL: 'internal://0814-0291-7832/pod/0',
        shortcut: false,
        controllableName: 'internal:PodMiniComponent',
        definition: {
          commands: [
            {
              commandName: 'getName',
              nparams: 0,
            },
            {
              commandName: 'update',
              nparams: 0,
            },
            {
              commandName: 'setCountryCode',
              nparams: 1,
            },
            {
              commandName: 'activateCalendar',
              nparams: 0,
            },
            {
              commandName: 'deactivateCalendar',
              nparams: 0,
            },
            {
              commandName: 'refreshPodMode',
              nparams: 0,
            },
            {
              commandName: 'refreshUpdateStatus',
              nparams: 0,
            },
            {
              commandName: 'setCalendar',
              nparams: 1,
            },
            {
              commandName: 'setLightingLedPodMode',
              nparams: 1,
            },
            {
              commandName: 'setPodLedOff',
              nparams: 0,
            },
            {
              commandName: 'setPodLedOn',
              nparams: 0,
            },
          ],
          states: [
            {
              type: 'DiscreteState',
              values: ['offline', 'online'],
              qualifiedName: 'core:ConnectivityState',
            },
            {
              type: 'DataState',
              qualifiedName: 'core:CountryCodeState',
            },
            {
              type: 'DataState',
              qualifiedName: 'core:LocalIPv4AddressState',
            },
            {
              type: 'DataState',
              qualifiedName: 'core:NameState',
            },
            {
              type: 'DiscreteState',
              values: ['doublePress', 'longPress', 'simplePress', 'triplePress', 'veryLongPress'],
              qualifiedName: 'internal:LastActionConfigButtonState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'internal:LightingLedPodModeState',
            },
          ],
          dataProperties: [],
          widgetName: 'Pod',
          uiProfiles: ['UpdatableComponent'],
          uiClass: 'Pod',
          qualifiedName: 'internal:PodMiniComponent',
          type: 'ACTUATOR',
        },
        states: [
          {
            name: 'core:NameState',
            type: 3,
            value: 'Box',
          },
          {
            name: 'internal:LightingLedPodModeState',
            type: 2,
            value: 1,
          },
          {
            name: 'core:CountryCodeState',
            type: 3,
            value: 'BE',
          },
          {
            name: 'core:LocalIPv4AddressState',
            type: 3,
            value: 'N/A',
          },
        ],
        available: true,
        enabled: true,
        placeOID: 'ebd3b36a-dd8f-4012-90c3-6ab51607e889',
        widget: 'Pod',
        type: 1,
        oid: '50d30409-4949-4122-a674-aaacc0d28cc4',
        uiClass: 'Pod',
      },
      'fbb6f179-92b4-479a-9c53-41607e3c7a15': {
        creationTime: 1601921868000,
        lastUpdateTime: 1601921868000,
        label: 'Radiateur',
        deviceURL: 'io://0814-0291-7832/11410052#1',
        shortcut: false,
        controllableName: 'io:AtlanticElectricalHeaterWithAdjustableTemperatureSetpointIOComponent',
        definition: {
          commands: [
            {
              commandName: 'advancedRefresh',
              nparams: 1,
            },
            {
              commandName: 'cancelHeatingLevel',
              nparams: 1,
            },
            {
              commandName: 'delayedStopIdentify',
              nparams: 1,
            },
            {
              commandName: 'getName',
              nparams: 0,
            },
            {
              commandName: 'identify',
              nparams: 0,
            },
            {
              commandName: 'noPersonInside',
              nparams: 0,
            },
            {
              commandName: 'off',
              nparams: 0,
            },
            {
              commandName: 'personInside',
              nparams: 0,
            },
            {
              commandName: 'refreshComfortTemperature',
              nparams: 0,
            },
            {
              commandName: 'refreshDateTime',
              nparams: 0,
            },
            {
              commandName: 'refreshDerogatedTargetTemperature',
              nparams: 0,
            },
            {
              commandName: 'refreshEcoTemperature',
              nparams: 0,
            },
            {
              commandName: 'refreshHeatingLevel',
              nparams: 0,
            },
            {
              commandName: 'refreshIdentifier',
              nparams: 0,
            },
            {
              commandName: 'refreshManufacturerName',
              nparams: 0,
            },
            {
              commandName: 'refreshMaximumHeatingTargetTemperature',
              nparams: 0,
            },
            {
              commandName: 'refreshMaximumTargetTemperature',
              nparams: 0,
            },
            {
              commandName: 'refreshOperatingMode',
              nparams: 0,
            },
            {
              commandName: 'refreshTargetTemperature',
              nparams: 0,
            },
            {
              commandName: 'refreshTemperature',
              nparams: 0,
            },
            {
              commandName: 'refreshTimeProgram',
              nparams: 0,
            },
            {
              commandName: 'setComfortTemperature',
              nparams: 1,
            },
            {
              commandName: 'setDateTime',
              nparams: 1,
            },
            {
              commandName: 'setDerogatedTargetTemperature',
              nparams: 1,
            },
            {
              commandName: 'setEcoTemperature',
              nparams: 1,
            },
            {
              commandName: 'setHeatingLevel',
              nparams: 1,
            },
            {
              commandName: 'setHeatingLevelWithTimer',
              nparams: 2,
            },
            {
              commandName: 'setHolidays',
              nparams: 1,
            },
            {
              commandName: 'setHolidaysTargetTemperature',
              nparams: 1,
            },
            {
              commandName: 'setName',
              nparams: 1,
            },
            {
              commandName: 'setOccupancyActivation',
              nparams: 1,
            },
            {
              commandName: 'setOccupancy',
              nparams: 1,
            },
            {
              commandName: 'setOpenWindowDetectionActivation',
              nparams: 1,
            },
            {
              commandName: 'setOperatingMode',
              nparams: 1,
            },
            {
              commandName: 'setPreviousTargetTemperature',
              nparams: 1,
            },
            {
              commandName: 'setSchedulingType',
              nparams: 1,
            },
            {
              commandName: 'setTargetTemperature',
              nparams: 1,
            },
            {
              commandName: 'setTimeProgram',
              nparams: 1,
            },
            {
              commandName: 'startIdentify',
              nparams: 0,
            },
            {
              commandName: 'stopIdentify',
              nparams: 0,
            },
            {
              commandName: 'wink',
              nparams: 1,
            },
            {
              commandName: 'pairOneWayController',
              nparams: 2,
            },
            {
              commandName: 'refreshAutoProgram',
              nparams: 0,
            },
            {
              commandName: 'refreshControllerAddress',
              nparams: 0,
            },
            {
              commandName: 'refreshCumulatedLowering',
              nparams: 0,
            },
            {
              commandName: 'refreshCurrentWorkingRate',
              nparams: 0,
            },
            {
              commandName: 'refreshDeletionCancelation',
              nparams: 0,
            },
            {
              commandName: 'refreshEffectiveTemperatureSetpoint',
              nparams: 0,
            },
            {
              commandName: 'refreshLocalLeadTime',
              nparams: 0,
            },
            {
              commandName: 'refreshModel',
              nparams: 0,
            },
            {
              commandName: 'refreshNativeFunctionalLevel',
              nparams: 0,
            },
            {
              commandName: 'refreshPeakNotice',
              nparams: 0,
            },
            {
              commandName: 'refreshPeakWarning',
              nparams: 0,
            },
            {
              commandName: 'refreshPowerAndTension',
              nparams: 0,
            },
            {
              commandName: 'refreshRoomDeletionThreshold',
              nparams: 0,
            },
            {
              commandName: 'refreshSetpointLoweringTemperatureInProgMode',
              nparams: 0,
            },
            {
              commandName: 'refreshSynchronisationRequest',
              nparams: 0,
            },
            {
              commandName: 'refreshTemperatureProbeCalibrationOffset',
              nparams: 0,
            },
            {
              commandName: 'setCommunicationTest',
              nparams: 1,
            },
            {
              commandName: 'setDeletionCancelation',
              nparams: 1,
            },
            {
              commandName: 'setExpectedPresence',
              nparams: 1,
            },
            {
              commandName: 'setHeatingLevelForTrigger',
              nparams: 1,
            },
            {
              commandName: 'setNativeLevelsList',
              nparams: 1,
            },
            {
              commandName: 'setPeakNotice',
              nparams: 1,
            },
            {
              commandName: 'setPeakWarning',
              nparams: 1,
            },
            {
              commandName: 'setRoomDeletionThreshold',
              nparams: 1,
            },
            {
              commandName: 'setSetpointLoweringTemperatureInProgMode',
              nparams: 1,
            },
            {
              commandName: 'setTemperatureProbeCalibrationOffset',
              nparams: 1,
            },
            {
              commandName: 'setTwinningExit',
              nparams: 1,
            },
            {
              commandName: 'unpairAllOneWayControllers',
              nparams: 0,
            },
            {
              commandName: 'unpairOneWayController',
              nparams: 2,
            },
          ],
          states: [
            {
              type: 'ContinuousState',
              qualifiedName: 'core:ComfortRoomTemperatureState',
            },
            {
              type: 'DataState',
              qualifiedName: 'core:DateTimeState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:DerogatedTargetTemperatureState',
            },
            {
              type: 'DiscreteState',
              values: ['good', 'low', 'normal', 'verylow'],
              qualifiedName: 'core:DiscreteRSSILevelState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:EcoRoomTemperatureState',
            },
            {
              type: 'DiscreteState',
              values: ['off', 'on'],
              qualifiedName: 'core:HolidaysModeState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:HolidaysTargetTemperatureState',
            },
            {
              type: 'DataState',
              qualifiedName: 'core:IdentifierState',
            },
            {
              type: 'DataState',
              qualifiedName: 'core:ManufacturerNameState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:MaximumHeatingTargetTemperatureState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:MaximumTargetTemperatureState',
            },
            {
              type: 'DataState',
              qualifiedName: 'core:NameState',
            },
            {
              type: 'DiscreteState',
              values: ['active', 'inactive'],
              qualifiedName: 'core:OccupancyActivationState',
            },
            {
              type: 'DiscreteState',
              values: ['off', 'on'],
              qualifiedName: 'core:OnOffState',
            },
            {
              type: 'DiscreteState',
              values: ['active', 'inactive'],
              qualifiedName: 'core:OpenWindowDetectionActivationState',
            },
            {
              type: 'DiscreteState',
              values: [
                'antifreeze',
                'auto',
                'away',
                'eco',
                'frostprotection',
                'manual',
                'max',
                'normal',
                'off',
                'on',
                'prog',
                'program',
                'boost',
              ],
              qualifiedName: 'core:OperatingModeState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:PreviousTargetTemperatureState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:PriorityLockTimerState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:RSSILevelState',
            },
            {
              type: 'DiscreteState',
              values: ['increase', 'none', 'standby'],
              qualifiedName: 'core:RegulationModeState',
            },
            {
              type: 'DiscreteState',
              values: ['available', 'unavailable'],
              qualifiedName: 'core:StatusState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:TargetTemperatureState',
            },
            {
              type: 'DataState',
              qualifiedName: 'core:TimeProgramState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:VersionState',
            },
            {
              type: 'DataState',
              qualifiedName: 'io:AutoProgramState',
            },
            {
              type: 'DataState',
              qualifiedName: 'io:ControllerAddressState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'io:CumulatedLoweringState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'io:CurrentWorkingRateState',
            },
            {
              type: 'DiscreteState',
              values: ['deletion cancelation', 'no deletion cancelation'],
              qualifiedName: 'io:DeletionCancelationState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'io:EffectiveTemperatureSetpointState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'io:ExpectedPresenceState',
            },
            {
              type: 'DiscreteState',
              values: ['external', 'internal'],
              qualifiedName: 'io:InternalExternalSchedulingTypeState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'io:LocalLeadTimeState',
            },
            {
              type: 'DiscreteState',
              values: ['boost', 'comfort', 'comfort-1', 'comfort-2', 'eco', 'frostprotection', 'off', 'secured'],
              qualifiedName: 'io:MaximumHeatingLevelState',
            },
            {
              type: 'DataState',
              qualifiedName: 'io:ModelState',
            },
            {
              type: 'DiscreteState',
              values: ['base', 'medium', 'top'],
              qualifiedName: 'io:NativeFunctionalLevelState',
            },
            {
              type: 'DiscreteState',
              values: ['long peak', 'no peak', 'short peak'],
              qualifiedName: 'io:PeakNoticeState',
            },
            {
              type: 'DiscreteState',
              values: ['long peak warning', 'no warning', 'short peak warning'],
              qualifiedName: 'io:PeakWarningState',
            },
            {
              type: 'DataState',
              qualifiedName: 'io:PowerState',
            },
            {
              type: 'DiscreteState',
              values: [
                'comfortLevel1',
                'comfortLevel2',
                'comfortLevel3',
                'comfortLevel4',
                'environmentProtection',
                'humanProtection',
                'userLevel1',
                'userLevel2',
              ],
              qualifiedName: 'io:PriorityLockLevelState',
            },
            {
              type: 'DiscreteState',
              values: [
                'LSC',
                'SAAC',
                'SFC',
                'UPS',
                'externalGateway',
                'localUser',
                'myself',
                'rain',
                'security',
                'temperature',
                'timer',
                'user',
                'wind',
              ],
              qualifiedName: 'io:PriorityLockOriginatorState',
            },
            {
              type: 'DataState',
              qualifiedName: 'io:RoomDeletionThresholdState',
            },
            {
              type: 'DiscreteState',
              values: ['kept', 'lost'],
              qualifiedName: 'io:RunningState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'io:SetpointLoweringTemperatureInProgModeState',
            },
            {
              type: 'DiscreteState',
              values: ['boost', 'comfort', 'comfort-1', 'comfort-2', 'eco', 'frostprotection', 'off', 'secured'],
              qualifiedName: 'io:TargetHeatingLevelState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'io:TemperatureProbeCalibrationOffsetState',
            },
            {
              type: 'DataState',
              qualifiedName: 'io:TensionState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'io:TimerForTransitoryStateState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'io:UptimeState',
            },
          ],
          dataProperties: [
            {
              value: '500',
              qualifiedName: 'core:identifyInterval',
            },
          ],
          widgetName: 'AtlanticElectricalHeaterWithAdjustableTemperatureSetpoint',
          uiProfiles: ['StatefulOperatingModeHeating', 'OperatingModeHeating', 'StatefulThermostat', 'Thermostat'],
          uiClass: 'HeatingSystem',
          uiClassifiers: ['emitter'],
          qualifiedName: 'io:AtlanticElectricalHeaterWithAdjustableTemperatureSetpointIOComponent',
          type: 'ACTUATOR',
        },
        states: [
          {
            name: 'core:NameState',
            type: 3,
            value: 'Radiateur',
          },
          {
            name: 'core:VersionState',
            type: 3,
            value: '49373431303038202020',
          },
          {
            name: 'core:PriorityLockTimerState',
            type: 1,
            value: 0,
          },
          {
            name: 'core:OnOffState',
            type: 3,
            value: 'on',
          },
          {
            name: 'io:TargetHeatingLevelState',
            type: 3,
            value: 'eco',
          },
          {
            name: 'core:StatusState',
            type: 3,
            value: 'available',
          },
          {
            name: 'core:DiscreteRSSILevelState',
            type: 3,
            value: 'normal',
          },
          {
            name: 'core:RSSILevelState',
            type: 2,
            value: 56,
          },
          {
            name: 'core:IdentifierState',
            type: 3,
            value: '00000000',
          },
          {
            name: 'io:MaximumHeatingLevelState',
            type: 3,
            value: 'unknown',
          },
          {
            name: 'io:TimerForTransitoryStateState',
            type: 1,
            value: 0,
          },
          {
            name: 'core:ComfortRoomTemperatureState',
            type: 1,
            value: 18,
          },
          {
            name: 'core:EcoRoomTemperatureState',
            type: 1,
            value: 7,
          },
          {
            name: 'core:OperatingModeState',
            type: 3,
            value: 'basic',
          },
          {
            name: 'core:OccupancyActivationState',
            type: 3,
            value: 'inactive',
          },
          {
            name: 'core:MaximumHeatingTargetTemperatureState',
            type: 2,
            value: 28,
          },
          {
            name: 'core:MaximumTargetTemperatureState',
            type: 2,
            value: 28,
          },
          {
            name: 'core:TargetTemperatureState',
            type: 2,
            value: 18,
          },
          {
            name: 'io:SetpointLoweringTemperatureInProgModeState',
            type: 2,
            value: 7,
          },
          {
            name: 'core:OpenWindowDetectionActivationState',
            type: 3,
            value: 'active',
          },
          {
            name: 'io:InternalExternalSchedulingTypeState',
            type: 3,
            value: 'internal',
          },
          {
            name: 'core:DateTimeState',
            type: 11,
            value: {
              month: 3,
              hour: 9,
              year: 2018,
              weekday: 5,
              day: 10,
              minute: 40,
              second: 50,
            },
          },
          {
            name: 'io:LocalLeadTimeState',
            type: 1,
            value: 2269,
          },
          {
            name: 'core:RegulationModeState',
            type: 3,
            value: 'none',
          },
          {
            name: 'core:ManufacturerNameState',
            type: 3,
            value: 'Atlantic',
          },
          {
            name: 'io:ModelState',
            type: 3,
            value: 'AGILIA H PI-io',
          },
          {
            name: 'io:PowerState',
            type: 1,
            value: 750,
          },
          {
            name: 'io:TensionState',
            type: 1,
            value: 230,
          },
          {
            name: 'core:DerogatedTargetTemperatureState',
            type: 2,
            value: 0,
          },
          {
            name: 'io:NativeFunctionalLevelState',
            type: 3,
            value: 'Top',
          },
          {
            name: 'io:TemperatureProbeCalibrationOffsetState',
            type: 2,
            value: 0,
          },
          {
            name: 'io:CurrentWorkingRateState',
            type: 2,
            value: 0,
          },
          {
            name: 'io:CumulatedLoweringState',
            type: 2,
            value: 0,
          },
          {
            name: 'io:RoomDeletionThresholdState',
            type: 3,
            value: '-2°C',
          },
          {
            name: 'io:EffectiveTemperatureSetpointState',
            type: 2,
            value: 11,
          },
          {
            name: 'io:ControllerAddressState',
            type: 1,
            value: 11410051,
          },
          {
            name: 'io:ExpectedPresenceState',
            type: 3,
            value: '17:30',
            lastUpdateTime: 1607184038000,
          },
          {
            name: 'io:AutoProgramState',
            type: 11,
            value: {
              sunday: [
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_NIV3',
                'CONF_NIV3',
                'CONF_3_NIV1',
                'CONF_1',
                'CONF_3_NIV2',
                'CONF_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV2',
                'CONF_NIV3',
                'CONF_2',
                'CONF_1',
                'CONF_2',
                'CONF_NIV1',
                'CONF_NIV2',
                'CONF_2',
                'CONF_NIV2',
                'CONF_NIV1',
                'CONF_2',
                'CONF_NIV2',
                'CONF_3_NIV2',
                'CONF_3_NIV2',
                'CONF_1',
                'CONF_3_NIV1',
                'CONF_1',
                'CONF_1',
                'CONF_1',
                'CONF_NIV2',
                'CONF_NIV2',
                'CONF_NIV3',
                'CONF_NIV2',
                'CONF_3_NIV2',
                'CONF_NIV1',
                'CONF_2',
                'CONF_NIV3',
                'CONF_NIV2',
                'CONF_NIV2',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_1',
                'CONF_2',
                'CONF_1',
                'CONF_1',
                'CONF_3_NIV2',
              ],
              saturday: [
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV2',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_2',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_2',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_2',
                'CONF_2',
                'CONF_3_NIV2',
                'CONF_NIV3',
                'CONF_NIV3',
                'CONF_NIV3',
                'CONF_NIV2',
                'CONF_NIV1',
                'CONF_NIV2',
                'CONF_NIV2',
                'CONF_NIV3',
                'CONF_NIV1',
                'CONF_3_NIV1',
                'CONF_NIV3',
                'CONF_1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_NIV3',
                'CONF_NIV3',
                'CONF_NIV1',
                'CONF_NIV2',
                'CONF_2',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_NIV1',
                'CONF_NIV1',
                'CONF_NIV3',
                'CONF_3_NIV2',
                'CONF_3_NIV1',
                'CONF_3_NIV2',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_NIV1',
                'CONF_3_NIV1',
              ],
              tuesday: [
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_2',
                'CONF_2',
                'CONF_2',
                'CONF_2',
                'CONF_3_NIV2',
                'CONF_NIV1',
                'CONF_NIV3',
                'CONF_3_NIV1',
                'CONF_NIV1',
                'CONF_3_NIV2',
                'CONF_NIV2',
                'CONF_NIV2',
                'CONF_NIV2',
                'CONF_3_NIV1',
                'CONF_3_NIV2',
                'CONF_1',
                'CONF_1',
                'CONF_1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_2',
                'CONF_2',
                'CONF_1',
                'CONF_3_NIV1',
                'CONF_1',
                'CONF_2',
                'CONF_3_NIV2',
                'CONF_3_NIV1',
                'CONF_NIV1',
                'CONF_NIV1',
                'CONF_NIV3',
                'CONF_1',
                'CONF_2',
                'CONF_2',
                'CONF_NIV1',
                'CONF_NIV2',
                'CONF_1',
                'CONF_NIV1',
                'CONF_2',
                'CONF_NIV2',
                'CONF_3_NIV1',
              ],
              wednesday: [
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_2',
                'CONF_NIV1',
                'CONF_3_NIV1',
                'CONF_NIV3',
                'CONF_NIV1',
                'CONF_NIV2',
                'CONF_3_NIV1',
                'CONF_NIV2',
                'CONF_3_NIV1',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV2',
                'CONF_2',
                'CONF_1',
                'CONF_3_NIV2',
                'CONF_2',
                'CONF_NIV3',
                'CONF_3_NIV2',
                'CONF_3_NIV1',
                'CONF_NIV3',
                'CONF_NIV1',
                'CONF_NIV1',
                'CONF_NIV2',
                'CONF_2',
                'CONF_3_NIV2',
                'CONF_NIV3',
                'CONF_NIV2',
                'CONF_2',
                'CONF_1',
                'CONF_1',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_NIV2',
                'CONF_3_NIV1',
                'CONF_1',
                'CONF_3_NIV2',
              ],
              thursday: [
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_2',
                'CONF_2',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_1',
                'CONF_NIV2',
                'CONF_3_NIV1',
                'CONF_1',
                'CONF_2',
                'CONF_NIV1',
                'CONF_1',
                'CONF_3_NIV1',
                'CONF_NIV2',
                'CONF_NIV1',
                'CONF_NIV2',
                'CONF_NIV3',
                'CONF_3_NIV1',
                'CONF_2',
                'CONF_2',
                'CONF_1',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_NIV1',
                'CONF_NIV1',
                'CONF_3_NIV1',
                'CONF_1',
                'CONF_NIV3',
                'CONF_3_NIV2',
                'CONF_3_NIV2',
                'CONF_NIV1',
                'CONF_NIV1',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_NIV1',
                'CONF_1',
                'CONF_3_NIV1',
              ],
              friday: [
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV2',
                'CONF_3_NIV1',
                'CONF_NIV2',
                'CONF_3_NIV1',
                'CONF_NIV3',
                'CONF_2',
                'CONF_NIV3',
                'CONF_3_NIV1',
                'CONF_NIV1',
                'CONF_3_NIV1',
                'CONF_2',
                'CONF_2',
                'CONF_NIV1',
                'CONF_2',
                'CONF_NIV3',
                'CONF_3_NIV2',
                'CONF_2',
                'CONF_NIV1',
                'CONF_NIV2',
                'CONF_NIV3',
                'CONF_NIV3',
                'CONF_2',
                'CONF_NIV2',
                'CONF_1',
                'CONF_NIV1',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_NIV3',
                'CONF_3_NIV1',
                'CONF_NIV1',
                'CONF_3_NIV2',
              ],
              anticipTime: 2269,
              anticipNb: 20,
              monday: [
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_NIV1',
                'CONF_1',
                'CONF_2',
                'CONF_NIV3',
                'CONF_NIV2',
                'CONF_NIV2',
                'CONF_NIV3',
                'CONF_NIV2',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_NIV3',
                'CONF_NIV3',
                'CONF_3_NIV2',
                'CONF_1',
                'CONF_3_NIV1',
                'CONF_1',
                'CONF_3_NIV1',
                'CONF_1',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_3_NIV2',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_NIV3',
                'CONF_NIV2',
                'CONF_NIV3',
                'CONF_3_NIV2',
                'CONF_2',
                'CONF_NIV3',
                'CONF_NIV2',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_3_NIV2',
                'CONF_NIV2',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
              ],
            },
          },
          {
            name: 'core:TimeProgramState',
            type: 10,
            value: [
              {
                monday: [
                  {
                    start: '05:30',
                    end: '08:30',
                  },
                  {
                    start: '18:30',
                    end: '21:00',
                  },
                  {
                    start: '00:00',
                    end: '00:00',
                  },
                ],
              },
              {
                tuesday: [
                  {
                    start: '05:30',
                    end: '08:30',
                  },
                  {
                    start: '18:30',
                    end: '21:00',
                  },
                  {
                    start: '00:00',
                    end: '00:00',
                  },
                ],
              },
              {
                wednesday: [
                  {
                    start: '06:30',
                    end: '08:30',
                  },
                  {
                    start: '18:30',
                    end: '21:00',
                  },
                  {
                    start: '00:00',
                    end: '00:00',
                  },
                ],
              },
              {
                thursday: [
                  {
                    start: '05:30',
                    end: '08:30',
                  },
                  {
                    start: '18:30',
                    end: '21:00',
                  },
                  {
                    start: '00:00',
                    end: '00:00',
                  },
                ],
              },
              {
                friday: [
                  {
                    start: '05:30',
                    end: '08:30',
                  },
                  {
                    start: '18:30',
                    end: '21:00',
                  },
                  {
                    start: '00:00',
                    end: '00:00',
                  },
                ],
              },
              {
                saturday: [
                  {
                    start: '05:30',
                    end: '08:30',
                  },
                  {
                    start: '18:30',
                    end: '21:00',
                  },
                  {
                    start: '00:00',
                    end: '00:00',
                  },
                ],
              },
              {
                sunday: [
                  {
                    start: '05:30',
                    end: '08:30',
                  },
                  {
                    start: '18:30',
                    end: '21:00',
                  },
                  {
                    start: '00:00',
                    end: '00:00',
                  },
                ],
              },
            ],
          },
        ],
        attributes: [
          {
            name: 'core:FirmwareRevision',
            type: 3,
            value: 'I741008',
          },
          {
            name: 'core:Manufacturer',
            type: 3,
            value: 'Atlantic Group',
          },
        ],
        available: true,
        enabled: true,
        placeOID: '9abb0634-9b62-476f-8a60-0a63463e011b',
        place: 'Salle de bain',
        widget: 'AtlanticElectricalHeaterWithAdjustableTemperatureSetpoint',
        type: 1,
        oid: 'fbb6f179-92b4-479a-9c53-41607e3c7a15',
        uiClass: 'HeatingSystem',
      },
      '45eca6ef-5a88-4858-a84c-f9614258f966': {
        creationTime: 1601921868000,
        lastUpdateTime: 1601921868000,
        label: 'IO (11410052#2)',
        deviceURL: 'io://0814-0291-7832/11410052#2',
        shortcut: false,
        controllableName: 'io:TemperatureInCelciusIOSystemDeviceSensor',
        definition: {
          commands: [],
          states: [
            {
              type: 'DiscreteState',
              values: ['available', 'unavailable'],
              qualifiedName: 'core:StatusState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:TemperatureState',
            },
          ],
          dataProperties: [],
          widgetName: 'TemperatureSensor',
          uiProfiles: ['Temperature'],
          uiClass: 'TemperatureSensor',
          qualifiedName: 'io:TemperatureInCelciusIOSystemDeviceSensor',
          type: 'SENSOR',
        },
        states: [
          {
            name: 'core:StatusState',
            type: 3,
            value: 'available',
          },
          {
            name: 'core:TemperatureState',
            type: 2,
            value: 16.83,
          },
        ],
        attributes: [
          {
            name: 'core:FirmwareRevision',
            type: 3,
            value: 'I741008',
          },
          {
            name: 'core:Manufacturer',
            type: 3,
            value: 'Atlantic Group',
          },
          {
            name: 'core:MeasuredValueType',
            type: 3,
            value: 'core:TemperatureInCelcius',
          },
          {
            name: 'core:PowerSourceType',
            type: 3,
            value: 'mainSupply',
          },
        ],
        available: true,
        enabled: true,
        placeOID: '9abb0634-9b62-476f-8a60-0a63463e011b',
        place: 'Salle de bain',
        widget: 'TemperatureSensor',
        type: 2,
        oid: '45eca6ef-5a88-4858-a84c-f9614258f966',
        uiClass: 'TemperatureSensor',
      },
      '2263edf8-95b5-41e8-8c59-a44c89aabe6f': {
        creationTime: 1601921868000,
        lastUpdateTime: 1601921868000,
        label: 'IO (11410052#4)',
        deviceURL: 'io://0814-0291-7832/11410052#4',
        shortcut: false,
        controllableName: 'io:OccupancyIOSystemDeviceSensor',
        definition: {
          commands: [],
          states: [
            {
              eventBased: true,
              type: 'DiscreteState',
              values: ['noPersonInside', 'personInside'],
              qualifiedName: 'core:OccupancyState',
            },
            {
              type: 'DiscreteState',
              values: ['available', 'unavailable'],
              qualifiedName: 'core:StatusState',
            },
          ],
          dataProperties: [],
          widgetName: 'OccupancySensor',
          uiProfiles: ['OccupancyDetector'],
          uiClass: 'OccupancySensor',
          qualifiedName: 'io:OccupancyIOSystemDeviceSensor',
          type: 'SENSOR',
        },
        states: [
          {
            name: 'core:StatusState',
            type: 3,
            value: 'available',
          },
          {
            name: 'core:OccupancyState',
            type: 3,
            value: 'noPersonInside',
          },
        ],
        attributes: [
          {
            name: 'core:FirmwareRevision',
            type: 3,
            value: 'I741008',
          },
          {
            name: 'core:Manufacturer',
            type: 3,
            value: 'Atlantic Group',
          },
          {
            name: 'core:PowerSourceType',
            type: 3,
            value: 'mainSupply',
          },
        ],
        available: true,
        enabled: true,
        placeOID: '9abb0634-9b62-476f-8a60-0a63463e011b',
        place: 'Salle de bain',
        widget: 'OccupancySensor',
        type: 2,
        oid: '2263edf8-95b5-41e8-8c59-a44c89aabe6f',
        uiClass: 'OccupancySensor',
      },
      '3d8317f1-5cfa-475d-9766-582909112fe0': {
        creationTime: 1601921868000,
        lastUpdateTime: 1601921868000,
        label: 'IO (11410052#5)',
        deviceURL: 'io://0814-0291-7832/11410052#5',
        shortcut: false,
        controllableName: 'io:CumulatedElectricalEnergyConsumptionIOSystemDeviceSensor',
        definition: {
          commands: [],
          states: [
            {
              type: 'ContinuousState',
              qualifiedName: 'core:ConsumptionTariff0State',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:ConsumptionTariff1State',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:ConsumptionTariff2State',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:ConsumptionTariff3State',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:ConsumptionTariff4State',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:ConsumptionTariff5State',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:ConsumptionTariff6State',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:ConsumptionTariff7State',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:ConsumptionTariff8State',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:ConsumptionTariff9State',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:ElectricEnergyConsumptionState',
            },
            {
              type: 'DiscreteState',
              values: ['available', 'unavailable'],
              qualifiedName: 'core:StatusState',
            },
          ],
          dataProperties: [],
          widgetName: 'CumulativeElectricPowerConsumptionSensor',
          uiProfiles: ['ElectricEnergyConsumption'],
          uiClass: 'ElectricitySensor',
          qualifiedName: 'io:CumulatedElectricalEnergyConsumptionIOSystemDeviceSensor',
          type: 'SENSOR',
        },
        states: [
          {
            name: 'core:StatusState',
            type: 3,
            value: 'available',
          },
          {
            name: 'core:ElectricEnergyConsumptionState',
            type: 1,
            value: 312000,
          },
          {
            name: 'core:ConsumptionTariff1State',
            type: 1,
            value: 40000,
          },
          {
            name: 'core:ConsumptionTariff2State',
            type: 1,
            value: 100000,
          },
        ],
        attributes: [
          {
            name: 'core:FirmwareRevision',
            type: 3,
            value: 'I741008',
          },
          {
            name: 'core:Manufacturer',
            type: 3,
            value: 'Atlantic Group',
          },
          {
            name: 'core:PowerSourceType',
            type: 3,
            value: 'mainSupply',
          },
          {
            name: 'core:MeasuredValueType',
            type: 3,
            value: 'core:ElectricalEnergyInWh',
          },
        ],
        available: true,
        enabled: true,
        placeOID: '9abb0634-9b62-476f-8a60-0a63463e011b',
        place: 'Salle de bain',
        widget: 'CumulativeElectricPowerConsumptionSensor',
        type: 2,
        oid: '3d8317f1-5cfa-475d-9766-582909112fe0',
        uiClass: 'ElectricitySensor',
      },
      'c40edcea-4d8c-4223-af1c-696abd4e94ff': {
        creationTime: 1601391514000,
        lastUpdateTime: 1601391514000,
        label: 'IO (15909334)',
        deviceURL: 'io://0814-0291-7832/15909334',
        shortcut: false,
        controllableName: 'io:StackComponent',
        definition: {
          commands: [
            {
              commandName: 'advancedSomfyDiscover',
              nparams: 1,
            },
            {
              commandName: 'discover1WayController',
              nparams: 2,
            },
            {
              commandName: 'discoverActuators',
              nparams: 1,
            },
            {
              commandName: 'discoverSensors',
              nparams: 1,
            },
            {
              commandName: 'discoverSomfyUnsetActuators',
              nparams: 0,
            },
            {
              commandName: 'joinNetwork',
              nparams: 0,
            },
            {
              commandName: 'resetNetworkSecurity',
              nparams: 0,
            },
            {
              commandName: 'shareNetwork',
              nparams: 0,
            },
          ],
          states: [],
          dataProperties: [],
          widgetName: 'IOStack',
          uiProfiles: ['Specific'],
          uiClass: 'ProtocolGateway',
          qualifiedName: 'io:StackComponent',
          type: 'PROTOCOL_GATEWAY',
        },
        available: true,
        enabled: true,
        placeOID: 'ebd3b36a-dd8f-4012-90c3-6ab51607e889',
        widget: 'IOStack',
        type: 5,
        oid: 'c40edcea-4d8c-4223-af1c-696abd4e94ff',
        uiClass: 'ProtocolGateway',
      },
    };
    overkizHandler.connected = true;
    const devices = await overkizHandler.getOverkizDevices();
    expect(devices).to.deep.equal([
      {
        external_id: 'overkiz:deviceURL:io://0814-0291-7832/11410052#1',
        name: 'Radiateur (Salle de bain)',
        model: 'AGILIA H PI-io 750W (Atlantic)',
        service_id: 'OVERKIZ_SERVICE_ID',
        should_poll: true,
        poll_frequency: 1800000,
        updatable: true,
        ready: true,
        rawOverkizDevice: {
          id: 'fbb6f179-92b4-479a-9c53-41607e3c7a15',
          deviceURL: 'io://0814-0291-7832/11410052#1',
        },
        features: [
          {
            category: 'thermostat',
            external_id: 'overkiz:deviceURL:io://0814-0291-7832/11410052#1:state:core:TargetTemperatureState',
            has_feedback: true,
            max: 40,
            min: 0,
            name: 'Temperature',
            read_only: false,
            selector: 'overkiz-deviceurl-io-0814-0291-7832-114100521-state-core-targettemperaturestate',
            type: 'target-temperature',
            unit: 'celsius',
          },
          {
            category: 'temperature-sensor',
            external_id: 'overkiz:deviceURL:io://0814-0291-7832/11410052#2:state:core:TemperatureState',
            has_feedback: true,
            max: 40,
            min: 0,
            name: 'Temperature',
            read_only: true,
            selector: 'overkiz-deviceurl-io-0814-0291-7832-114100522-state-core-temperaturestate',
            type: 'decimal',
            unit: 'celsius',
          },
          {
            name: 'Occupancy',
            selector: 'overkiz-deviceurl-io-0814-0291-7832-114100524-state-core-occupancystate',
            category: 'presence-sensor',
            type: 'push',
            external_id: 'overkiz:deviceURL:io://0814-0291-7832/11410052#4:state:core:OccupancyState',
            read_only: true,
            has_feedback: false,
            keep_history: true,
            min: 0,
            max: 1,
          },
        ],
        params: [
          {
            name: 'ONLINE',
            value: 'available',
          },
          {
            name: 'FIRMWARE',
            value: 'I741008',
          },
          {
            name: 'STATE',
            value: 'basic',
          },
        ],
      },
    ]);
  });

  it('should return device AUTO', async () => {
    overkizHandler.devices = {
      '50d30409-4949-4122-a674-aaacc0d28cc4': {
        creationTime: 1586773014000,
        lastUpdateTime: 1586773014000,
        label: 'Box',
        deviceURL: 'internal://0814-0291-7832/pod/0',
        shortcut: false,
        controllableName: 'internal:PodMiniComponent',
        definition: {
          commands: [
            {
              commandName: 'getName',
              nparams: 0,
            },
            {
              commandName: 'update',
              nparams: 0,
            },
            {
              commandName: 'setCountryCode',
              nparams: 1,
            },
            {
              commandName: 'activateCalendar',
              nparams: 0,
            },
            {
              commandName: 'deactivateCalendar',
              nparams: 0,
            },
            {
              commandName: 'refreshPodMode',
              nparams: 0,
            },
            {
              commandName: 'refreshUpdateStatus',
              nparams: 0,
            },
            {
              commandName: 'setCalendar',
              nparams: 1,
            },
            {
              commandName: 'setLightingLedPodMode',
              nparams: 1,
            },
            {
              commandName: 'setPodLedOff',
              nparams: 0,
            },
            {
              commandName: 'setPodLedOn',
              nparams: 0,
            },
          ],
          states: [
            {
              type: 'DiscreteState',
              values: ['offline', 'online'],
              qualifiedName: 'core:ConnectivityState',
            },
            {
              type: 'DataState',
              qualifiedName: 'core:CountryCodeState',
            },
            {
              type: 'DataState',
              qualifiedName: 'core:LocalIPv4AddressState',
            },
            {
              type: 'DataState',
              qualifiedName: 'core:NameState',
            },
            {
              type: 'DiscreteState',
              values: ['doublePress', 'longPress', 'simplePress', 'triplePress', 'veryLongPress'],
              qualifiedName: 'internal:LastActionConfigButtonState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'internal:LightingLedPodModeState',
            },
          ],
          dataProperties: [],
          widgetName: 'Pod',
          uiProfiles: ['UpdatableComponent'],
          uiClass: 'Pod',
          qualifiedName: 'internal:PodMiniComponent',
          type: 'ACTUATOR',
        },
        states: [
          {
            name: 'core:NameState',
            type: 3,
            value: 'Box',
          },
          {
            name: 'internal:LightingLedPodModeState',
            type: 2,
            value: 1,
          },
          {
            name: 'core:CountryCodeState',
            type: 3,
            value: 'BE',
          },
          {
            name: 'core:LocalIPv4AddressState',
            type: 3,
            value: 'N/A',
          },
        ],
        available: true,
        enabled: true,
        placeOID: 'ebd3b36a-dd8f-4012-90c3-6ab51607e889',
        widget: 'Pod',
        type: 1,
        oid: '50d30409-4949-4122-a674-aaacc0d28cc4',
        uiClass: 'Pod',
      },
      'fbb6f179-92b4-479a-9c53-41607e3c7a15': {
        creationTime: 1601921868000,
        lastUpdateTime: 1601921868000,
        label: 'Radiateur',
        deviceURL: 'io://0814-0291-7832/11410052#1',
        shortcut: false,
        controllableName: 'io:AtlanticElectricalHeaterWithAdjustableTemperatureSetpointIOComponent',
        definition: {
          commands: [
            {
              commandName: 'advancedRefresh',
              nparams: 1,
            },
            {
              commandName: 'cancelHeatingLevel',
              nparams: 1,
            },
            {
              commandName: 'delayedStopIdentify',
              nparams: 1,
            },
            {
              commandName: 'getName',
              nparams: 0,
            },
            {
              commandName: 'identify',
              nparams: 0,
            },
            {
              commandName: 'noPersonInside',
              nparams: 0,
            },
            {
              commandName: 'off',
              nparams: 0,
            },
            {
              commandName: 'personInside',
              nparams: 0,
            },
            {
              commandName: 'refreshComfortTemperature',
              nparams: 0,
            },
            {
              commandName: 'refreshDateTime',
              nparams: 0,
            },
            {
              commandName: 'refreshDerogatedTargetTemperature',
              nparams: 0,
            },
            {
              commandName: 'refreshEcoTemperature',
              nparams: 0,
            },
            {
              commandName: 'refreshHeatingLevel',
              nparams: 0,
            },
            {
              commandName: 'refreshIdentifier',
              nparams: 0,
            },
            {
              commandName: 'refreshManufacturerName',
              nparams: 0,
            },
            {
              commandName: 'refreshMaximumHeatingTargetTemperature',
              nparams: 0,
            },
            {
              commandName: 'refreshMaximumTargetTemperature',
              nparams: 0,
            },
            {
              commandName: 'refreshOperatingMode',
              nparams: 0,
            },
            {
              commandName: 'refreshTargetTemperature',
              nparams: 0,
            },
            {
              commandName: 'refreshTemperature',
              nparams: 0,
            },
            {
              commandName: 'refreshTimeProgram',
              nparams: 0,
            },
            {
              commandName: 'setComfortTemperature',
              nparams: 1,
            },
            {
              commandName: 'setDateTime',
              nparams: 1,
            },
            {
              commandName: 'setDerogatedTargetTemperature',
              nparams: 1,
            },
            {
              commandName: 'setEcoTemperature',
              nparams: 1,
            },
            {
              commandName: 'setHeatingLevel',
              nparams: 1,
            },
            {
              commandName: 'setHeatingLevelWithTimer',
              nparams: 2,
            },
            {
              commandName: 'setHolidays',
              nparams: 1,
            },
            {
              commandName: 'setHolidaysTargetTemperature',
              nparams: 1,
            },
            {
              commandName: 'setName',
              nparams: 1,
            },
            {
              commandName: 'setOccupancyActivation',
              nparams: 1,
            },
            {
              commandName: 'setOccupancy',
              nparams: 1,
            },
            {
              commandName: 'setOpenWindowDetectionActivation',
              nparams: 1,
            },
            {
              commandName: 'setOperatingMode',
              nparams: 1,
            },
            {
              commandName: 'setPreviousTargetTemperature',
              nparams: 1,
            },
            {
              commandName: 'setSchedulingType',
              nparams: 1,
            },
            {
              commandName: 'setTargetTemperature',
              nparams: 1,
            },
            {
              commandName: 'setTimeProgram',
              nparams: 1,
            },
            {
              commandName: 'startIdentify',
              nparams: 0,
            },
            {
              commandName: 'stopIdentify',
              nparams: 0,
            },
            {
              commandName: 'wink',
              nparams: 1,
            },
            {
              commandName: 'pairOneWayController',
              nparams: 2,
            },
            {
              commandName: 'refreshAutoProgram',
              nparams: 0,
            },
            {
              commandName: 'refreshControllerAddress',
              nparams: 0,
            },
            {
              commandName: 'refreshCumulatedLowering',
              nparams: 0,
            },
            {
              commandName: 'refreshCurrentWorkingRate',
              nparams: 0,
            },
            {
              commandName: 'refreshDeletionCancelation',
              nparams: 0,
            },
            {
              commandName: 'refreshEffectiveTemperatureSetpoint',
              nparams: 0,
            },
            {
              commandName: 'refreshLocalLeadTime',
              nparams: 0,
            },
            {
              commandName: 'refreshModel',
              nparams: 0,
            },
            {
              commandName: 'refreshNativeFunctionalLevel',
              nparams: 0,
            },
            {
              commandName: 'refreshPeakNotice',
              nparams: 0,
            },
            {
              commandName: 'refreshPeakWarning',
              nparams: 0,
            },
            {
              commandName: 'refreshPowerAndTension',
              nparams: 0,
            },
            {
              commandName: 'refreshRoomDeletionThreshold',
              nparams: 0,
            },
            {
              commandName: 'refreshSetpointLoweringTemperatureInProgMode',
              nparams: 0,
            },
            {
              commandName: 'refreshSynchronisationRequest',
              nparams: 0,
            },
            {
              commandName: 'refreshTemperatureProbeCalibrationOffset',
              nparams: 0,
            },
            {
              commandName: 'setCommunicationTest',
              nparams: 1,
            },
            {
              commandName: 'setDeletionCancelation',
              nparams: 1,
            },
            {
              commandName: 'setExpectedPresence',
              nparams: 1,
            },
            {
              commandName: 'setHeatingLevelForTrigger',
              nparams: 1,
            },
            {
              commandName: 'setNativeLevelsList',
              nparams: 1,
            },
            {
              commandName: 'setPeakNotice',
              nparams: 1,
            },
            {
              commandName: 'setPeakWarning',
              nparams: 1,
            },
            {
              commandName: 'setRoomDeletionThreshold',
              nparams: 1,
            },
            {
              commandName: 'setSetpointLoweringTemperatureInProgMode',
              nparams: 1,
            },
            {
              commandName: 'setTemperatureProbeCalibrationOffset',
              nparams: 1,
            },
            {
              commandName: 'setTwinningExit',
              nparams: 1,
            },
            {
              commandName: 'unpairAllOneWayControllers',
              nparams: 0,
            },
            {
              commandName: 'unpairOneWayController',
              nparams: 2,
            },
          ],
          states: [
            {
              type: 'ContinuousState',
              qualifiedName: 'core:ComfortRoomTemperatureState',
            },
            {
              type: 'DataState',
              qualifiedName: 'core:DateTimeState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:DerogatedTargetTemperatureState',
            },
            {
              type: 'DiscreteState',
              values: ['good', 'low', 'normal', 'verylow'],
              qualifiedName: 'core:DiscreteRSSILevelState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:EcoRoomTemperatureState',
            },
            {
              type: 'DiscreteState',
              values: ['off', 'on'],
              qualifiedName: 'core:HolidaysModeState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:HolidaysTargetTemperatureState',
            },
            {
              type: 'DataState',
              qualifiedName: 'core:IdentifierState',
            },
            {
              type: 'DataState',
              qualifiedName: 'core:ManufacturerNameState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:MaximumHeatingTargetTemperatureState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:MaximumTargetTemperatureState',
            },
            {
              type: 'DataState',
              qualifiedName: 'core:NameState',
            },
            {
              type: 'DiscreteState',
              values: ['active', 'inactive'],
              qualifiedName: 'core:OccupancyActivationState',
            },
            {
              type: 'DiscreteState',
              values: ['off', 'on'],
              qualifiedName: 'core:OnOffState',
            },
            {
              type: 'DiscreteState',
              values: ['active', 'inactive'],
              qualifiedName: 'core:OpenWindowDetectionActivationState',
            },
            {
              type: 'DiscreteState',
              values: [
                'antifreeze',
                'auto',
                'away',
                'eco',
                'frostprotection',
                'manual',
                'max',
                'normal',
                'off',
                'on',
                'prog',
                'program',
                'boost',
              ],
              qualifiedName: 'core:OperatingModeState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:PreviousTargetTemperatureState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:PriorityLockTimerState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:RSSILevelState',
            },
            {
              type: 'DiscreteState',
              values: ['increase', 'none', 'standby'],
              qualifiedName: 'core:RegulationModeState',
            },
            {
              type: 'DiscreteState',
              values: ['available', 'unavailable'],
              qualifiedName: 'core:StatusState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:TargetTemperatureState',
            },
            {
              type: 'DataState',
              qualifiedName: 'core:TimeProgramState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:VersionState',
            },
            {
              type: 'DataState',
              qualifiedName: 'io:AutoProgramState',
            },
            {
              type: 'DataState',
              qualifiedName: 'io:ControllerAddressState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'io:CumulatedLoweringState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'io:CurrentWorkingRateState',
            },
            {
              type: 'DiscreteState',
              values: ['deletion cancelation', 'no deletion cancelation'],
              qualifiedName: 'io:DeletionCancelationState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'io:EffectiveTemperatureSetpointState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'io:ExpectedPresenceState',
            },
            {
              type: 'DiscreteState',
              values: ['external', 'internal'],
              qualifiedName: 'io:InternalExternalSchedulingTypeState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'io:LocalLeadTimeState',
            },
            {
              type: 'DiscreteState',
              values: ['boost', 'comfort', 'comfort-1', 'comfort-2', 'eco', 'frostprotection', 'off', 'secured'],
              qualifiedName: 'io:MaximumHeatingLevelState',
            },
            {
              type: 'DataState',
              qualifiedName: 'io:ModelState',
            },
            {
              type: 'DiscreteState',
              values: ['base', 'medium', 'top'],
              qualifiedName: 'io:NativeFunctionalLevelState',
            },
            {
              type: 'DiscreteState',
              values: ['long peak', 'no peak', 'short peak'],
              qualifiedName: 'io:PeakNoticeState',
            },
            {
              type: 'DiscreteState',
              values: ['long peak warning', 'no warning', 'short peak warning'],
              qualifiedName: 'io:PeakWarningState',
            },
            {
              type: 'DataState',
              qualifiedName: 'io:PowerState',
            },
            {
              type: 'DiscreteState',
              values: [
                'comfortLevel1',
                'comfortLevel2',
                'comfortLevel3',
                'comfortLevel4',
                'environmentProtection',
                'humanProtection',
                'userLevel1',
                'userLevel2',
              ],
              qualifiedName: 'io:PriorityLockLevelState',
            },
            {
              type: 'DiscreteState',
              values: [
                'LSC',
                'SAAC',
                'SFC',
                'UPS',
                'externalGateway',
                'localUser',
                'myself',
                'rain',
                'security',
                'temperature',
                'timer',
                'user',
                'wind',
              ],
              qualifiedName: 'io:PriorityLockOriginatorState',
            },
            {
              type: 'DataState',
              qualifiedName: 'io:RoomDeletionThresholdState',
            },
            {
              type: 'DiscreteState',
              values: ['kept', 'lost'],
              qualifiedName: 'io:RunningState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'io:SetpointLoweringTemperatureInProgModeState',
            },
            {
              type: 'DiscreteState',
              values: ['boost', 'comfort', 'comfort-1', 'comfort-2', 'eco', 'frostprotection', 'off', 'secured'],
              qualifiedName: 'io:TargetHeatingLevelState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'io:TemperatureProbeCalibrationOffsetState',
            },
            {
              type: 'DataState',
              qualifiedName: 'io:TensionState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'io:TimerForTransitoryStateState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'io:UptimeState',
            },
          ],
          dataProperties: [
            {
              value: '500',
              qualifiedName: 'core:identifyInterval',
            },
          ],
          widgetName: 'AtlanticElectricalHeaterWithAdjustableTemperatureSetpoint',
          uiProfiles: ['StatefulOperatingModeHeating', 'OperatingModeHeating', 'StatefulThermostat', 'Thermostat'],
          uiClass: 'HeatingSystem',
          uiClassifiers: ['emitter'],
          qualifiedName: 'io:AtlanticElectricalHeaterWithAdjustableTemperatureSetpointIOComponent',
          type: 'ACTUATOR',
        },
        states: [
          {
            name: 'core:NameState',
            type: 3,
            value: 'Radiateur',
          },
          {
            name: 'core:VersionState',
            type: 3,
            value: '49373431303038202020',
          },
          {
            name: 'core:PriorityLockTimerState',
            type: 1,
            value: 0,
          },
          {
            name: 'core:OnOffState',
            type: 3,
            value: 'on',
          },
          {
            name: 'io:TargetHeatingLevelState',
            type: 3,
            value: 'eco',
          },
          {
            name: 'core:StatusState',
            type: 3,
            value: 'available',
          },
          {
            name: 'core:DiscreteRSSILevelState',
            type: 3,
            value: 'normal',
          },
          {
            name: 'core:RSSILevelState',
            type: 2,
            value: 56,
          },
          {
            name: 'core:IdentifierState',
            type: 3,
            value: '00000000',
          },
          {
            name: 'io:MaximumHeatingLevelState',
            type: 3,
            value: 'unknown',
          },
          {
            name: 'io:TimerForTransitoryStateState',
            type: 1,
            value: 0,
          },
          {
            name: 'core:ComfortRoomTemperatureState',
            type: 1,
            value: 18,
          },
          {
            name: 'core:EcoRoomTemperatureState',
            type: 1,
            value: 7,
          },
          {
            name: 'core:OperatingModeState',
            type: 3,
            value: 'auto',
          },
          {
            name: 'core:OccupancyActivationState',
            type: 3,
            value: 'inactive',
          },
          {
            name: 'core:MaximumHeatingTargetTemperatureState',
            type: 2,
            value: 28,
          },
          {
            name: 'core:MaximumTargetTemperatureState',
            type: 2,
            value: 28,
          },
          {
            name: 'core:TargetTemperatureState',
            type: 2,
            value: 18,
          },
          {
            name: 'io:SetpointLoweringTemperatureInProgModeState',
            type: 2,
            value: 7,
          },
          {
            name: 'core:OpenWindowDetectionActivationState',
            type: 3,
            value: 'active',
          },
          {
            name: 'io:InternalExternalSchedulingTypeState',
            type: 3,
            value: 'internal',
          },
          {
            name: 'core:DateTimeState',
            type: 11,
            value: {
              month: 3,
              hour: 9,
              year: 2018,
              weekday: 5,
              day: 10,
              minute: 40,
              second: 50,
            },
          },
          {
            name: 'io:LocalLeadTimeState',
            type: 1,
            value: 2269,
          },
          {
            name: 'core:RegulationModeState',
            type: 3,
            value: 'none',
          },
          {
            name: 'core:ManufacturerNameState',
            type: 3,
            value: 'Atlantic',
          },
          {
            name: 'io:ModelState',
            type: 3,
            value: 'AGILIA H PI-io',
          },
          {
            name: 'io:PowerState',
            type: 1,
            value: 750,
          },
          {
            name: 'io:TensionState',
            type: 1,
            value: 230,
          },
          {
            name: 'core:DerogatedTargetTemperatureState',
            type: 2,
            value: 0,
          },
          {
            name: 'io:NativeFunctionalLevelState',
            type: 3,
            value: 'Top',
          },
          {
            name: 'io:TemperatureProbeCalibrationOffsetState',
            type: 2,
            value: 0,
          },
          {
            name: 'io:CurrentWorkingRateState',
            type: 2,
            value: 0,
          },
          {
            name: 'io:CumulatedLoweringState',
            type: 2,
            value: 0,
          },
          {
            name: 'io:RoomDeletionThresholdState',
            type: 3,
            value: '-2°C',
          },
          {
            name: 'io:EffectiveTemperatureSetpointState',
            type: 2,
            value: 11,
          },
          {
            name: 'io:ControllerAddressState',
            type: 1,
            value: 11410051,
          },
          {
            name: 'io:ExpectedPresenceState',
            type: 3,
            value: '17:30',
            lastUpdateTime: 1607184038000,
          },
          {
            name: 'io:AutoProgramState',
            type: 11,
            value: {
              sunday: [
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_NIV3',
                'CONF_NIV3',
                'CONF_3_NIV1',
                'CONF_1',
                'CONF_3_NIV2',
                'CONF_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV2',
                'CONF_NIV3',
                'CONF_2',
                'CONF_1',
                'CONF_2',
                'CONF_NIV1',
                'CONF_NIV2',
                'CONF_2',
                'CONF_NIV2',
                'CONF_NIV1',
                'CONF_2',
                'CONF_NIV2',
                'CONF_3_NIV2',
                'CONF_3_NIV2',
                'CONF_1',
                'CONF_3_NIV1',
                'CONF_1',
                'CONF_1',
                'CONF_1',
                'CONF_NIV2',
                'CONF_NIV2',
                'CONF_NIV3',
                'CONF_NIV2',
                'CONF_3_NIV2',
                'CONF_NIV1',
                'CONF_2',
                'CONF_NIV3',
                'CONF_NIV2',
                'CONF_NIV2',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_1',
                'CONF_2',
                'CONF_1',
                'CONF_1',
                'CONF_3_NIV2',
              ],
              saturday: [
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV2',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_2',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_2',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_2',
                'CONF_2',
                'CONF_3_NIV2',
                'CONF_NIV3',
                'CONF_NIV3',
                'CONF_NIV3',
                'CONF_NIV2',
                'CONF_NIV1',
                'CONF_NIV2',
                'CONF_NIV2',
                'CONF_NIV3',
                'CONF_NIV1',
                'CONF_3_NIV1',
                'CONF_NIV3',
                'CONF_1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_NIV3',
                'CONF_NIV3',
                'CONF_NIV1',
                'CONF_NIV2',
                'CONF_2',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_NIV1',
                'CONF_NIV1',
                'CONF_NIV3',
                'CONF_3_NIV2',
                'CONF_3_NIV1',
                'CONF_3_NIV2',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_NIV1',
                'CONF_3_NIV1',
              ],
              tuesday: [
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_2',
                'CONF_2',
                'CONF_2',
                'CONF_2',
                'CONF_3_NIV2',
                'CONF_NIV1',
                'CONF_NIV3',
                'CONF_3_NIV1',
                'CONF_NIV1',
                'CONF_3_NIV2',
                'CONF_NIV2',
                'CONF_NIV2',
                'CONF_NIV2',
                'CONF_3_NIV1',
                'CONF_3_NIV2',
                'CONF_1',
                'CONF_1',
                'CONF_1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_2',
                'CONF_2',
                'CONF_1',
                'CONF_3_NIV1',
                'CONF_1',
                'CONF_2',
                'CONF_3_NIV2',
                'CONF_3_NIV1',
                'CONF_NIV1',
                'CONF_NIV1',
                'CONF_NIV3',
                'CONF_1',
                'CONF_2',
                'CONF_2',
                'CONF_NIV1',
                'CONF_NIV2',
                'CONF_1',
                'CONF_NIV1',
                'CONF_2',
                'CONF_NIV2',
                'CONF_3_NIV1',
              ],
              wednesday: [
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_2',
                'CONF_NIV1',
                'CONF_3_NIV1',
                'CONF_NIV3',
                'CONF_NIV1',
                'CONF_NIV2',
                'CONF_3_NIV1',
                'CONF_NIV2',
                'CONF_3_NIV1',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV2',
                'CONF_2',
                'CONF_1',
                'CONF_3_NIV2',
                'CONF_2',
                'CONF_NIV3',
                'CONF_3_NIV2',
                'CONF_3_NIV1',
                'CONF_NIV3',
                'CONF_NIV1',
                'CONF_NIV1',
                'CONF_NIV2',
                'CONF_2',
                'CONF_3_NIV2',
                'CONF_NIV3',
                'CONF_NIV2',
                'CONF_2',
                'CONF_1',
                'CONF_1',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_NIV2',
                'CONF_3_NIV1',
                'CONF_1',
                'CONF_3_NIV2',
              ],
              thursday: [
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_2',
                'CONF_2',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_1',
                'CONF_NIV2',
                'CONF_3_NIV1',
                'CONF_1',
                'CONF_2',
                'CONF_NIV1',
                'CONF_1',
                'CONF_3_NIV1',
                'CONF_NIV2',
                'CONF_NIV1',
                'CONF_NIV2',
                'CONF_NIV3',
                'CONF_3_NIV1',
                'CONF_2',
                'CONF_2',
                'CONF_1',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_NIV1',
                'CONF_NIV1',
                'CONF_3_NIV1',
                'CONF_1',
                'CONF_NIV3',
                'CONF_3_NIV2',
                'CONF_3_NIV2',
                'CONF_NIV1',
                'CONF_NIV1',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_NIV1',
                'CONF_1',
                'CONF_3_NIV1',
              ],
              friday: [
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV2',
                'CONF_3_NIV1',
                'CONF_NIV2',
                'CONF_3_NIV1',
                'CONF_NIV3',
                'CONF_2',
                'CONF_NIV3',
                'CONF_3_NIV1',
                'CONF_NIV1',
                'CONF_3_NIV1',
                'CONF_2',
                'CONF_2',
                'CONF_NIV1',
                'CONF_2',
                'CONF_NIV3',
                'CONF_3_NIV2',
                'CONF_2',
                'CONF_NIV1',
                'CONF_NIV2',
                'CONF_NIV3',
                'CONF_NIV3',
                'CONF_2',
                'CONF_NIV2',
                'CONF_1',
                'CONF_NIV1',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_NIV3',
                'CONF_3_NIV1',
                'CONF_NIV1',
                'CONF_3_NIV2',
              ],
              anticipTime: 2269,
              anticipNb: 20,
              monday: [
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_NIV1',
                'CONF_1',
                'CONF_2',
                'CONF_NIV3',
                'CONF_NIV2',
                'CONF_NIV2',
                'CONF_NIV3',
                'CONF_NIV2',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_NIV3',
                'CONF_NIV3',
                'CONF_3_NIV2',
                'CONF_1',
                'CONF_3_NIV1',
                'CONF_1',
                'CONF_3_NIV1',
                'CONF_1',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_3_NIV2',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
                'CONF_NIV3',
                'CONF_NIV2',
                'CONF_NIV3',
                'CONF_3_NIV2',
                'CONF_2',
                'CONF_NIV3',
                'CONF_NIV2',
                'CONF_2',
                'CONF_3_NIV1',
                'CONF_3_NIV2',
                'CONF_NIV2',
                'CONF_3_NIV1',
                'CONF_3_NIV1',
              ],
            },
          },
          {
            name: 'core:TimeProgramState',
            type: 10,
            value: [
              {
                monday: [
                  {
                    start: '05:30',
                    end: '08:30',
                  },
                  {
                    start: '18:30',
                    end: '21:00',
                  },
                  {
                    start: '00:00',
                    end: '00:00',
                  },
                ],
              },
              {
                tuesday: [
                  {
                    start: '05:30',
                    end: '08:30',
                  },
                  {
                    start: '18:30',
                    end: '21:00',
                  },
                  {
                    start: '00:00',
                    end: '00:00',
                  },
                ],
              },
              {
                wednesday: [
                  {
                    start: '06:30',
                    end: '08:30',
                  },
                  {
                    start: '18:30',
                    end: '21:00',
                  },
                  {
                    start: '00:00',
                    end: '00:00',
                  },
                ],
              },
              {
                thursday: [
                  {
                    start: '05:30',
                    end: '08:30',
                  },
                  {
                    start: '18:30',
                    end: '21:00',
                  },
                  {
                    start: '00:00',
                    end: '00:00',
                  },
                ],
              },
              {
                friday: [
                  {
                    start: '05:30',
                    end: '08:30',
                  },
                  {
                    start: '18:30',
                    end: '21:00',
                  },
                  {
                    start: '00:00',
                    end: '00:00',
                  },
                ],
              },
              {
                saturday: [
                  {
                    start: '05:30',
                    end: '08:30',
                  },
                  {
                    start: '18:30',
                    end: '21:00',
                  },
                  {
                    start: '00:00',
                    end: '00:00',
                  },
                ],
              },
              {
                sunday: [
                  {
                    start: '05:30',
                    end: '08:30',
                  },
                  {
                    start: '18:30',
                    end: '21:00',
                  },
                  {
                    start: '00:00',
                    end: '00:00',
                  },
                ],
              },
            ],
          },
        ],
        attributes: [
          {
            name: 'core:FirmwareRevision',
            type: 3,
            value: 'I741008',
          },
          {
            name: 'core:Manufacturer',
            type: 3,
            value: 'Atlantic Group',
          },
        ],
        available: true,
        enabled: true,
        placeOID: '9abb0634-9b62-476f-8a60-0a63463e011b',
        place: 'Salle de bain',
        widget: 'AtlanticElectricalHeaterWithAdjustableTemperatureSetpoint',
        type: 1,
        oid: 'fbb6f179-92b4-479a-9c53-41607e3c7a15',
        uiClass: 'HeatingSystem',
      },
      '45eca6ef-5a88-4858-a84c-f9614258f966': {
        creationTime: 1601921868000,
        lastUpdateTime: 1601921868000,
        label: 'IO (11410052#2)',
        deviceURL: 'io://0814-0291-7832/11410052#2',
        shortcut: false,
        controllableName: 'io:TemperatureInCelciusIOSystemDeviceSensor',
        definition: {
          commands: [],
          states: [
            {
              type: 'DiscreteState',
              values: ['available', 'unavailable'],
              qualifiedName: 'core:StatusState',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:TemperatureState',
            },
          ],
          dataProperties: [],
          widgetName: 'TemperatureSensor',
          uiProfiles: ['Temperature'],
          uiClass: 'TemperatureSensor',
          qualifiedName: 'io:TemperatureInCelciusIOSystemDeviceSensor',
          type: 'SENSOR',
        },
        states: [
          {
            name: 'core:StatusState',
            type: 3,
            value: 'available',
          },
          {
            name: 'core:TemperatureState',
            type: 2,
            value: 16.83,
          },
        ],
        attributes: [
          {
            name: 'core:FirmwareRevision',
            type: 3,
            value: 'I741008',
          },
          {
            name: 'core:Manufacturer',
            type: 3,
            value: 'Atlantic Group',
          },
          {
            name: 'core:MeasuredValueType',
            type: 3,
            value: 'core:TemperatureInCelcius',
          },
          {
            name: 'core:PowerSourceType',
            type: 3,
            value: 'mainSupply',
          },
        ],
        available: true,
        enabled: true,
        placeOID: '9abb0634-9b62-476f-8a60-0a63463e011b',
        place: 'Salle de bain',
        widget: 'TemperatureSensor',
        type: 2,
        oid: '45eca6ef-5a88-4858-a84c-f9614258f966',
        uiClass: 'TemperatureSensor',
      },
      '2263edf8-95b5-41e8-8c59-a44c89aabe6f': {
        creationTime: 1601921868000,
        lastUpdateTime: 1601921868000,
        label: 'IO (11410052#4)',
        deviceURL: 'io://0814-0291-7832/11410052#4',
        shortcut: false,
        controllableName: 'io:OccupancyIOSystemDeviceSensor',
        definition: {
          commands: [],
          states: [
            {
              eventBased: true,
              type: 'DiscreteState',
              values: ['noPersonInside', 'personInside'],
              qualifiedName: 'core:OccupancyState',
            },
            {
              type: 'DiscreteState',
              values: ['available', 'unavailable'],
              qualifiedName: 'core:StatusState',
            },
          ],
          dataProperties: [],
          widgetName: 'OccupancySensor',
          uiProfiles: ['OccupancyDetector'],
          uiClass: 'OccupancySensor',
          qualifiedName: 'io:OccupancyIOSystemDeviceSensor',
          type: 'SENSOR',
        },
        states: [
          {
            name: 'core:StatusState',
            type: 3,
            value: 'available',
          },
          {
            name: 'core:OccupancyState',
            type: 3,
            value: 'noPersonInside',
          },
        ],
        attributes: [
          {
            name: 'core:FirmwareRevision',
            type: 3,
            value: 'I741008',
          },
          {
            name: 'core:Manufacturer',
            type: 3,
            value: 'Atlantic Group',
          },
          {
            name: 'core:PowerSourceType',
            type: 3,
            value: 'mainSupply',
          },
        ],
        available: true,
        enabled: true,
        placeOID: '9abb0634-9b62-476f-8a60-0a63463e011b',
        place: 'Salle de bain',
        widget: 'OccupancySensor',
        type: 2,
        oid: '2263edf8-95b5-41e8-8c59-a44c89aabe6f',
        uiClass: 'OccupancySensor',
      },
      '3d8317f1-5cfa-475d-9766-582909112fe0': {
        creationTime: 1601921868000,
        lastUpdateTime: 1601921868000,
        label: 'IO (11410052#5)',
        deviceURL: 'io://0814-0291-7832/11410052#5',
        shortcut: false,
        controllableName: 'io:CumulatedElectricalEnergyConsumptionIOSystemDeviceSensor',
        definition: {
          commands: [],
          states: [
            {
              type: 'ContinuousState',
              qualifiedName: 'core:ConsumptionTariff0State',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:ConsumptionTariff1State',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:ConsumptionTariff2State',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:ConsumptionTariff3State',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:ConsumptionTariff4State',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:ConsumptionTariff5State',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:ConsumptionTariff6State',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:ConsumptionTariff7State',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:ConsumptionTariff8State',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:ConsumptionTariff9State',
            },
            {
              type: 'ContinuousState',
              qualifiedName: 'core:ElectricEnergyConsumptionState',
            },
            {
              type: 'DiscreteState',
              values: ['available', 'unavailable'],
              qualifiedName: 'core:StatusState',
            },
          ],
          dataProperties: [],
          widgetName: 'CumulativeElectricPowerConsumptionSensor',
          uiProfiles: ['ElectricEnergyConsumption'],
          uiClass: 'ElectricitySensor',
          qualifiedName: 'io:CumulatedElectricalEnergyConsumptionIOSystemDeviceSensor',
          type: 'SENSOR',
        },
        states: [
          {
            name: 'core:StatusState',
            type: 3,
            value: 'available',
          },
          {
            name: 'core:ElectricEnergyConsumptionState',
            type: 1,
            value: 312000,
          },
          {
            name: 'core:ConsumptionTariff1State',
            type: 1,
            value: 40000,
          },
          {
            name: 'core:ConsumptionTariff2State',
            type: 1,
            value: 100000,
          },
        ],
        attributes: [
          {
            name: 'core:FirmwareRevision',
            type: 3,
            value: 'I741008',
          },
          {
            name: 'core:Manufacturer',
            type: 3,
            value: 'Atlantic Group',
          },
          {
            name: 'core:PowerSourceType',
            type: 3,
            value: 'mainSupply',
          },
          {
            name: 'core:MeasuredValueType',
            type: 3,
            value: 'core:ElectricalEnergyInWh',
          },
        ],
        available: true,
        enabled: true,
        placeOID: '9abb0634-9b62-476f-8a60-0a63463e011b',
        place: 'Salle de bain',
        widget: 'CumulativeElectricPowerConsumptionSensor',
        type: 2,
        oid: '3d8317f1-5cfa-475d-9766-582909112fe0',
        uiClass: 'ElectricitySensor',
      },
      'c40edcea-4d8c-4223-af1c-696abd4e94ff': {
        creationTime: 1601391514000,
        lastUpdateTime: 1601391514000,
        label: 'IO (15909334)',
        deviceURL: 'io://0814-0291-7832/15909334',
        shortcut: false,
        controllableName: 'io:StackComponent',
        definition: {
          commands: [
            {
              commandName: 'advancedSomfyDiscover',
              nparams: 1,
            },
            {
              commandName: 'discover1WayController',
              nparams: 2,
            },
            {
              commandName: 'discoverActuators',
              nparams: 1,
            },
            {
              commandName: 'discoverSensors',
              nparams: 1,
            },
            {
              commandName: 'discoverSomfyUnsetActuators',
              nparams: 0,
            },
            {
              commandName: 'joinNetwork',
              nparams: 0,
            },
            {
              commandName: 'resetNetworkSecurity',
              nparams: 0,
            },
            {
              commandName: 'shareNetwork',
              nparams: 0,
            },
          ],
          states: [],
          dataProperties: [],
          widgetName: 'IOStack',
          uiProfiles: ['Specific'],
          uiClass: 'ProtocolGateway',
          qualifiedName: 'io:StackComponent',
          type: 'PROTOCOL_GATEWAY',
        },
        available: true,
        enabled: true,
        placeOID: 'ebd3b36a-dd8f-4012-90c3-6ab51607e889',
        widget: 'IOStack',
        type: 5,
        oid: 'c40edcea-4d8c-4223-af1c-696abd4e94ff',
        uiClass: 'ProtocolGateway',
      },
    };
    overkizHandler.connected = true;
    const devices = await overkizHandler.getOverkizDevices();
    expect(devices).to.deep.equal([
      {
        external_id: 'overkiz:deviceURL:io://0814-0291-7832/11410052#1',
        name: 'Radiateur (Salle de bain)',
        model: 'AGILIA H PI-io 750W (Atlantic)',
        service_id: 'OVERKIZ_SERVICE_ID',
        should_poll: true,
        poll_frequency: 1800000,
        updatable: true,
        ready: true,
        rawOverkizDevice: {
          id: 'fbb6f179-92b4-479a-9c53-41607e3c7a15',
          deviceURL: 'io://0814-0291-7832/11410052#1',
        },
        features: [
          {
            category: 'thermostat',
            external_id: 'overkiz:deviceURL:io://0814-0291-7832/11410052#1:state:core:ComfortRoomTemperatureState',
            has_feedback: true,
            max: 40,
            min: 0,
            name: 'Comfort mode temperature',
            read_only: false,
            selector: 'overkiz-deviceurl-io-0814-0291-7832-114100521-state-core-comfortroomtemperaturestate',
            type: 'target-temperature',
            unit: 'celsius',
          },
          {
            category: 'thermostat',
            external_id: 'overkiz:deviceURL:io://0814-0291-7832/11410052#1:state:io:EffectiveTemperatureSetpointState',
            has_feedback: true,
            max: 40,
            min: 0,
            name: 'Eco mode temperature',
            read_only: false,
            selector: 'overkiz-deviceurl-io-0814-0291-7832-114100521-state-io-effectivetemperaturesetpointstate',
            type: 'target-temperature',
            unit: 'celsius',
          },
          {
            name: 'Temperature',
            selector: 'overkiz-deviceurl-io-0814-0291-7832-114100522-state-core-temperaturestate',
            category: 'temperature-sensor',
            type: 'decimal',
            external_id: 'overkiz:deviceURL:io://0814-0291-7832/11410052#2:state:core:TemperatureState',
            read_only: true,
            unit: 'celsius',
            has_feedback: true,
            min: 0,
            max: 40,
          },
          {
            name: 'Occupancy',
            selector: 'overkiz-deviceurl-io-0814-0291-7832-114100524-state-core-occupancystate',
            category: 'presence-sensor',
            type: 'push',
            external_id: 'overkiz:deviceURL:io://0814-0291-7832/11410052#4:state:core:OccupancyState',
            read_only: true,
            has_feedback: false,
            keep_history: true,
            min: 0,
            max: 1,
          },
        ],
        params: [
          {
            name: 'ONLINE',
            value: 'available',
          },
          {
            name: 'FIRMWARE',
            value: 'I741008',
          },
          {
            name: 'STATE',
            value: 'auto',
          },
        ],
      },
    ]);
  });
});
